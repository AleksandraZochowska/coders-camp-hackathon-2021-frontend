{"version":3,"sources":["Context.jsx","themes/theme.js","layout/Nav.jsx","components/inputs/emailInput/EmailInput.jsx","components/inputs/passwordInput/PasswordInput.jsx","api/rooms.js","components/inputs/questionListItem/QuestionListItem.js","api/server.js","components/forms/LoginForm.jsx","components/inputs/usernameInput/name.jsx","components/forms/RegisterForm.jsx","views/home/homeImg.jpg","views/home/Home.jsx","api/collections.js","components/modals/modal.style.js","components/modals/AnimatedModal.jsx","components/forms/QuestionEdit.style.js","components/forms/QuestionEdit.jsx","components/lists/QuestionsList.jsx","components/lists/CollectionsList.jsx","components/forms/CreateRoom.jsx","components/modals/AddRoomModal.jsx","components/lists/RoomsList.jsx","views/profile/Profile.jsx","switch/PrivateRoute.jsx","components/forms/MeetingView.jsx","switch/Switch.jsx","App.js","index.js"],"names":["AppContext","createContext","Store","children","useState","localStorage","getItem","token","setToken","profile","setProfile","Provider","value","setNewToken","setItem","clearToken","removeItem","setNewProfile","JSON","stringify","clearProfile","theme","createMuiTheme","palette","primary","light","main","dark","secondary","useStyles","makeStyles","rootNav","titleNav","flexGrow","marginLeft","welcomeTitle","marginRight","Nav","useContext","classes","matches","useMediaQuery","className","AppBar","position","Toolbar","Typography","variant","noWrap","name","Button","color","startIcon","onClick","EmailInput","id","errors","onChange","FormControl","fullWidth","InputLabel","htmlFor","Input","type","error","aria-describedby","FormHelperText","PasswordInput","Rooms","fetch","apiUrl","method","mode","headers","Authorization","response","json","handleError","room","body","guest","roomId","email","questionId","answerIndex","answer","console","log","QuestionListItem","question","defaultTime","undefined","timeForAnswer","seconds","setSeconds","counter","setCounter","isActive","setIsActive","isGrayedOut","setIsGrayedOut","useEffect","intervalId","setInterval","clearInterval","itemClicked","pushActiveQuestion","selectedQuestionId","_id","ListItem","disabled","button","ListItemIcon","Tooltip","title","ListItemText","text","ListItemSecondaryAction","IconButton","edge","aria-label","Server","values","loginBody","user","LoginForm","history","useHistory","formError","setFormError","loading","setLoading","validationSchema","yup","required","password","min","max","onSubmit","a","setSubmitting","login","result","statusCode","push","formik","useFormik","initialValues","handleSubmit","FormGroup","handleChange","isSubmitting","CircularProgress","size","UsernameInput","e","RegisterForm","setAction","register","setTimeout","loginDiv","width","margin","loginImg","border","borderRadius","marginTop","action","Home","Grid","container","spacing","alignItems","style","item","md","xs","Select","event","target","MenuItem","align","src","homeImg","alt","Collections","collectionBody","questions","collection","modal","display","justifyContent","paper","backgroundColor","background","boxShadow","shadows","padding","AnimatedModal","open","toggleOpen","Modal","aria-labelledby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","root","flexWrap","numberTextField","maxWidth","QuestionEdit","updateQuestion","answer0","answer1","answer2","answer3","correctAnswer","answers","TextField","label","map","index","QuestionsList","questionsArray","addQuestion","List","length","CollectionsList","collections","setCollections","modalOpen","setModalOpen","setQuestions","activeCollectionId","setActiveCollectionId","previous","reverse","handleEditClick","currentTarget","filter","getCollections","getAllCollections","find","new","addQuestionToCollection","mapQuestion","collectionsTemp","Date","now","roomName","CreateRoom","handleClosePopup","setError","createRoom","questionsCollectionId","collectionsSelect","collectionsResponse","noValidate","autoComplete","placeholder","helperText","touched","labelId","AddRoomModal","anchorEl","Popover","anchorOrigin","vertical","horizontal","transformOrigin","buttonModal","justifyItems","RoomsList","rooms","setRooms","isLoading","setIsLoading","setAnchorEl","getRooms","Boolean","roomList","date","createdAt","toLocaleString","copy","process","Profile","PrivateRoute","path","exact","component","to","demo","smallPadding","MeetingView","useParams","setRoom","questionCollection","setQuestionCollection","guests","setGuests","interval","getRoomById","roomResponse","fetchRoom","Container","Divider","rootMain","AppSwitch","render","rootApp","minHeight","flexDirection","App","ThemeProvider","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.482f29d1.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nexport const AppContext = createContext();\n\nexport const Store = ({ children }) => {\n    const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n    const [profile, setProfile] = useState(localStorage.getItem(\"profile\") || null);\n\n    const setNewToken = (token) => {\n        setToken(token);\n        localStorage.setItem(\"token\", token);\n    };\n\n    const clearToken = () => {\n        setToken(\"\");\n        localStorage.removeItem(\"token\");\n    };\n\n    const setNewProfile = (profile) => {\n        setProfile(profile);\n        localStorage.setItem(\"profile\", JSON.stringify(profile));\n    };\n\n    const clearProfile = () => {\n        setProfile(null);\n        localStorage.removeItem(\"profile\");\n    };\n\n    return (\n        <AppContext.Provider value={{ token, setNewToken, clearToken, profile, setNewProfile, clearProfile }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nStore.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: \"#a269f8\",\n            main: \"#6e3bc4\",\n            dark: \"#380992\",\n        },\n        secondary: {\n            light: \"#c4f76d\",\n            main: \"#91c43b\",\n            dark: \"#5f9300\",\n        },\n    },\n});\n","import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { AppContext } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootNav: {\n        // flexGrow: 1, //todo it breaks Meeting View\n    },\n    titleNav: {\n        flexGrow: 1,\n        marginLeft: \"20px\",\n    },\n    welcomeTitle: {\n        marginRight: \"20px\",\n    },\n}));\n\nexport const Nav = () => {\n    const { token, profile, clearToken, clearProfile } = useContext(AppContext);\n    const classes = useStyles();\n    const matches = useMediaQuery(\"(min-width:600px)\");\n\n    const handleLogout = () => {\n        clearProfile();\n        clearToken();\n    };\n\n    return (\n        <div className={classes.rootNav}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <AssignmentIcon />\n                    <Typography className={classes.titleNav} variant=\"h6\">\n                        Questio\n                    </Typography>\n                    {token && (\n                        <>\n                            {profile && (\n                                <Typography variant=\"h6\" noWrap className={classes.welcomeTitle}>\n                                    {profile.name}\n                                </Typography>\n                            )}\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                startIcon={<ExitToAppIcon />}\n                                onClick={handleLogout}\n                            >\n                                {matches && \"Log out\"}\n                            </Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nexport const EmailInput = ({ id, name, errors, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Email</InputLabel>\n            <Input\n                type=\"email\"\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={onChange}\n                aria-describedby=\"email-input-field\"\n            />\n            <FormHelperText id=\"FormInputHelperText\">{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nEmailInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const PasswordInput = ({ id, errors, name, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Password</InputLabel>\n            <Input\n                type=\"password\"\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={onChange}\n                aria-describedby=\"password-input-field\"\n            />\n            <FormHelperText id=\"FormInputHelperText\">{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nPasswordInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","export class Rooms {\r\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/rooms\";\r\n\r\n    static async getRooms(token) {\r\n        try {\r\n            const response = await fetch(Rooms.apiUrl, {\r\n                method: \"GET\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async getRoomById(id, token) {\r\n        try {\r\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\r\n                method: \"GET\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async createRoom(room, token) {\r\n        // room = {name: \"string\", \"questionsCollectionId\": \"2039ir23f023f9023\" }\r\n        try {\r\n            const response = await fetch(Rooms.apiUrl, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(room),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async changeRoomCollection(id, room, token) {\r\n        // room = { collectionId: \"2039ir23f023f9023\"}\r\n        try {\r\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\r\n                method: \"PATCH\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(room),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async changeRoomName(id, room, token) {\r\n        // room = {name: \"room name\"}\r\n        try {\r\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\r\n                method: \"PATCH\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(room),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async pushActiveQuestion(id, room, token) {\r\n        // room = {selectedQuestionId: \"2302340293r590\"}\r\n        try {\r\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\r\n                method: \"PATCH\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(room),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async updateGuests(id, guest) {\r\n        // guest = {email: \"test@test.com\", name: \"Albus Dumbledore\"}\r\n        try {\r\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\r\n                method: \"PATCH\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(guest),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async getActiveQuestion(roomId, email) {\r\n        try {\r\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/activequestion?email=${email}`, {\r\n                method: \"GET\",\r\n                mode: \"cors\", // no auth is ok\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async postAnswer(roomId, questionId, answerIndex, email) {\r\n        try {\r\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/answers`, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                body: JSON.stringify({\r\n                    questionId: questionId,\r\n                    answer: answerIndex,\r\n                    email: email,\r\n                }),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async getGuestSummary(roomId, email) {\r\n        try {\r\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/answers?email=${email}`, {\r\n                method: \"GET\",\r\n                mode: \"cors\", //no auth needed\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Rooms.handleError(error);\r\n        }\r\n    }\r\n\r\n    static handleError(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import { IconButton, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Tooltip } from \"@material-ui/core\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport PropTypes from \"prop-types\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Rooms } from \"../../../api/rooms\";\nimport { AppContext } from \"../../../Context\";\n\nexport const QuestionListItem = ({ question, roomId }) => {\n    const { token } = useContext(AppContext);\n\n    const defaultTime = question.timeForAnswer !== undefined ? question.timeForAnswer : 10;\n    const [seconds, setSeconds] = useState(defaultTime);\n    const [counter, setCounter] = useState(defaultTime);\n    const [isActive, setIsActive] = useState(false);\n    const [isGrayedOut, setIsGrayedOut] = useState(false);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isActive) {\n            intervalId = setInterval(() => {\n                setSeconds(counter);\n                setCounter((counter) => counter - 1);\n            }, 1000);\n        }\n\n        if (counter === -1) {\n            setIsActive(false);\n            setIsGrayedOut(true);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isActive, counter]);\n\n    const itemClicked = () => {\n        if (!isActive) {\n            Rooms.pushActiveQuestion(roomId, { selectedQuestionId: question._id }, token);\n        }\n        setIsActive(true);\n    };\n\n    const listAnswers = () => {\n        // todo: list answers\n        // if (!question || !question.answers || question.answers.length === 0) {\n        //     return <ListItemText>No answers</ListItemText>;\n        // }\n        // return question.answers.map((answer, index) => {\n        //     return <ListItemText key={index}>{answer}</ListItemText>;\n        // });\n        return undefined;\n    };\n\n    return (\n        <ListItem disabled={isGrayedOut} button onClick={itemClicked}>\n            <ListItemIcon>\n                <QuestionAnswerIcon />\n            </ListItemIcon>\n            <Tooltip title={\"Ask this question\"}>\n                <ListItemText primary={`${question.text}`} />\n            </Tooltip>\n            {/*<Collapse in={true} unmountOnExit>*/}\n            {/*    <List>{listAnswers()}</List>*/}\n            {/*</Collapse>*/}\n            {seconds}\n            <ListItemSecondaryAction>\n                <Tooltip title={\"Ask this question\"}>\n                    <IconButton disabled={isGrayedOut} edge=\"end\" aria-label=\"delete\" onClick={itemClicked}>\n                        <SendIcon />\n                    </IconButton>\n                </Tooltip>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n};\n\nQuestionListItem.propTypes = {\n    question: PropTypes.object.isRequired,\n    roomId: PropTypes.string.isRequired,\n};\n","export class Server {\r\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/users\";\r\n\r\n    static async login(values) {\r\n        try {\r\n            const response = await fetch(Server.apiUrl + \"/login\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n            });\r\n            const loginBody = await response.json();\r\n\r\n            return { token: loginBody.token, profile: loginBody.user };\r\n        } catch (error) {\r\n            Server.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async register(values) {\r\n        try {\r\n            const response = await fetch(Server.apiUrl + \"/register\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Server.handleError(error);\r\n        }\r\n    }\r\n\r\n    static handleError(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React, { useContext, useState } from \"react\";\nimport { FormGroup, Button, CircularProgress } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\n\nimport { EmailInput, PasswordInput } from \"../inputs\";\nimport { AppContext } from \"../../Context\";\nimport { Server } from \"../../api/server\";\n\nexport const LoginForm = () => {\n    const history = useHistory();\n    const { setNewToken, setNewProfile } = useContext(AppContext);\n    const [formError, setFormError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const validationSchema = yup.object({\n        email: yup.string(\"Enter email\").email(\"Enter a valid email\").required(\"Email is required\"),\n        password: yup\n            .string(\"Enter your password\")\n            .required(\"Password is required\")\n            .min(8, \"Password should be of minimum 8 characters length\")\n            .max(20, \"Password can't be longer than 20 characters.\")\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            ),\n    });\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        setFormError(\"\");\n        if (!loading) setLoading(() => true);\n        const result = await Server.login(values);\n\n        if (result.error) {\n            if (result.statusCode === 401) {\n                setFormError(\"Invalid credentials\");\n            } else {\n                setFormError(\"Something went wrong\");\n            }\n            setSubmitting(false);\n        } else {\n            setNewProfile(result.profile);\n            setNewToken(result.token);\n\n            setSubmitting(false);\n            history.push(\"/profile\");\n        }\n        setLoading(() => false);\n    };\n\n    const formik = useFormik({\n        initialValues: { email: \"\", password: \"\" },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form className=\"login\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <EmailInput\n                    errors={formik.errors.email}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <PasswordInput\n                    errors={formik.errors.password}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                />\n                <div id=\"formError\">{formError}</div>\n                <div>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={formik.isSubmitting}>\n                        Login\n                    </Button>\n                    {loading && <CircularProgress size={24} />}\n                </div>\n            </FormGroup>\n        </form>\n    );\n};\n","import React from \"react\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const UsernameInput = ({ id, name, errors, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Name</InputLabel>\n            <Input\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={(e) => onChange(e)}\n                aria-describedby=\"email-input-field\"\n            />\n            <FormHelperText>{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nUsernameInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { FormGroup, Button, CircularProgress } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { EmailInput, PasswordInput } from \"../inputs\";\nimport { Server } from \"../../api/server\";\nimport { UsernameInput } from \"../inputs/usernameInput/name\";\n\nexport const RegisterForm = ({ setAction }) => {\n    const [formError, setFormError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const validationSchema = yup.object({\n        email: yup.string(\"Enter email\").email(\"Enter a valid email\").required(\"Email is required\"),\n        password: yup\n            .string(\"Enter your password\")\n            .required(\"Password is required\")\n            .min(8, \"Password should be of minimum 8 characters length\")\n            .max(20, \"Password can't be longer than 20 characters.\")\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            ),\n        name: yup.string(\"Enter your name\").required(\"Name is required\"),\n    });\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        setFormError(\"\");\n        if (!loading) setLoading(() => true);\n        const result = await Server.register(values);\n        if (result.error) {\n            if (result.statusCode === 401) {\n                setFormError(\"Invalid credentials\");\n            } else {\n                setFormError(\"Something went wrong\");\n            }\n            setSubmitting(false);\n        } else {\n            setSubmitting(false);\n            setFormError(\"Account successfully created!\")\n            setTimeout(() => setAction('login'), 2000);\n        }\n        setLoading(() => false);\n    };\n\n    const formik = useFormik({\n        initialValues: { email: \"\", password: \"\" },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form className=\"register\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <UsernameInput\n                    errors={formik.errors.name}\n                    id=\"name\"\n                    name=\"name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                />\n                <EmailInput\n                    errors={formik.errors.email}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <PasswordInput\n                    errors={formik.errors.password}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                />\n                <div id=\"formError\">{formError}</div>\n                <div>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={formik.isSubmitting}>\n                        Register\n                    </Button>\n                    {loading && <CircularProgress size={24} />}\n                </div>\n            </FormGroup>\n        </form>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/homeImg.05c2a606.jpg\";","import { useState } from \"react\";\nimport { Button, FormControl, Grid, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { LoginForm } from \"../../components/forms/LoginForm\";\nimport { RegisterForm } from \"../../components/forms/RegisterForm\";\nimport homeImg from \"./homeImg.jpg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    loginDiv: {\n        width: \"80%\",\n        margin: \"auto\",\n    },\n    loginImg: {\n        border: \"6px solid #91C43B\",\n        borderRadius: \"10%\",\n        marginTop: \"25px\",\n    },\n    action: {\n        marginTop: \"30px\",\n    },\n}));\n\nexport const Home = () => {\n    const classes = useStyles();\n    const [action, setAction] = useState(\"login\");\n    const history = useHistory();\n\n    const handleChange = (event) => {\n        setAction(event.target.value);\n    };\n\n    return (\n        <Grid\n            container\n            spacing={5}\n            alignItems=\"center\"\n            style={{\n                margin: 0,\n                width: \"100%\",\n            }}\n        >\n            <Grid item md={6} xs={12}>\n                <div className={classes.loginDiv}>\n                    {action === \"login\" ? <LoginForm /> : <RegisterForm setAction={setAction} />}\n                    <div className={classes.action}>\n                        <FormControl>\n                            <Select value={action} onChange={handleChange}>\n                                <MenuItem value={\"login\"}>Log in</MenuItem>\n                                <MenuItem value={\"register\"}>Register</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n                <Button onClick={() => history.push(\"/mentor/question\")}>Guzik</Button>\n            </Grid>\n            <Grid item md={6} xs={12}>\n                <div className={classes.loginDiv}>\n                    <Typography align=\"center\" variant=\"h4\">\n                        No to distraction, yes to motivation!\n                    </Typography>\n                    <img src={homeImg} alt=\"homeImage\" width=\"95%\" className={classes.loginImg} />\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n","export class Collections {\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/collections\";\n\n    static async getAllCollections(token) {\n        try {\n            const response = await fetch(Collections.apiUrl, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async getCollectionById(id, token) {\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const collectionBody = await response.json();\n\n            return {\n                id: collectionBody._id,\n                name: collectionBody.name,\n                questions: collectionBody.questions,\n            };\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async createCollection(collection, token) {\n        // collection = {name: \"string\"}\n        try {\n            const response = await fetch(Collections.apiUrl, {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(collection),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async updateCollectionName(id, collection, token) {\n        // collection = {name: \"string\"}\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(collection),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async addQuestionToCollection(id, question, token) {\n        // question = {text: \"string\", answers: [...], correctAnswer: 0, timeForAnswer: 60}\n        console.log(id, question, token);\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({ question }),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static handleError(error) {\n        console.log(error);\n    }\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));","import React from \"react\";\nimport { useStyles } from \"./modal.style.js\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { Paper } from \"@material-ui/core\";\n\nexport default function AnimatedModal({ children, open, toggleOpen }) {\n    const classes = useStyles();\n\n    return (\n        <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={toggleOpen}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n                <Paper xs={12}>{children}</Paper>\n            </Fade>\n        </Modal>\n    );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n\n        \"& > *\": {\n            margin: \"0px 7px\",\n        },\n    },\n\n    numberTextField: {\n        maxWidth: \"50px\",\n    },\n\n    answer: {},\n}));\n","import React from \"react\";\nimport { TextField, ListItem, IconButton } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { useStyles } from \"./QuestionEdit.style\";\n\nexport const QuestionEdit = ({ question, updateQuestion }) => {\n    const classes = useStyles();\n    const validationSchema = yup.object({\n        text: yup.string().required(\"Question is required\"),\n        answer0: yup.string().required(\"At lest one answer is required\"),\n        answer1: yup.string(),\n        answer2: yup.string(),\n        answer3: yup.string(),\n        correctAnswer: yup\n            .number()\n            .required(\"You need to pass index of correct answer\")\n            .min(1, \"Index can't be smaller than 1\")\n            .max(4, \"Index can't be bigger than 4\"),\n        timeForAnswer: yup\n            .number()\n            .min(15, \"Time can't be shorter than 15 seconds\")\n            .max(120, \"Time can't be longer than 120 seconds\"),\n    });\n\n    const onSubmit = async (values) => {\n        updateQuestion(values);\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            _id: question._id,\n            text: question.text,\n            answer0: question.answers[0] || \"\",\n            answer1: question.answers[1] || \"\",\n            answer2: question.answers[2] || \"\",\n            answer3: question.answers[3] || \"\",\n            correctAnswer: question.correctAnswer ? question.correctAnswer + 1 : 1,\n            timeForAnswer: question.timeForAnswer,\n        },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <ListItem key={question._id}>\n            <form className={classes.root} onSubmit={formik.handleSubmit}>\n                <TextField\n                    onChange={formik.handleChange}\n                    name=\"text\"\n                    id=\"question\"\n                    label=\"Question\"\n                    value={formik.values.text}\n                />\n                <TextField\n                    onChange={formik.handleChange}\n                    name=\"timeForAnswer\"\n                    id=\"timeForAnswer\"\n                    type=\"number\"\n                    label=\"Time\"\n                    className={classes.numberTextField}\n                    value={formik.values.timeForAnswer}\n                />\n                {[0, 1, 2, 3].map((index) => {\n                    return (\n                        <TextField\n                            key={index}\n                            id=\"answer\"\n                            label={`Answer: ${index + 1}`}\n                            name={`answer${index}`}\n                            value={formik.values[`answer${index}`]}\n                            className={classes.answer}\n                            onChange={formik.handleChange}\n                        />\n                    );\n                })}\n                <TextField\n                    type=\"number\"\n                    onChange={formik.handleChange}\n                    name=\"correctAnswer\"\n                    id=\"correctAnswer\"\n                    label=\"Correct\"\n                    className={classes.numberTextField}\n                    value={formik.values.correctAnswer}\n                />\n                <IconButton\n                    color=\"primary\"\n                    edge=\"end\"\n                    aria-label=\"edit\"\n                    value={question._id}\n                    onClick={formik.handleSubmit}\n                >\n                    <SaveIcon />\n                </IconButton>\n\n                <div id=\"formError\">{formik.errors[0]}</div>\n            </form>\n        </ListItem>\n    );\n};\n","import React from \"react\";\nimport { Grid, Typography, List, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport { QuestionEdit } from \"../forms/QuestionEdit\";\n\nexport const QuestionsList = ({ questionsArray, updateQuestion, addQuestion }) => {\n    return (\n        <Grid item xs={12}>\n            <List>\n                <Typography variant=\"h6\">Collection</Typography>\n                {!!questionsArray.length\n                    ? questionsArray.map((question) => {\n                          return (\n                              <QuestionEdit key={question._id} question={question} updateQuestion={updateQuestion} />\n                          );\n                      })\n                    : \"This collection is empty\"}\n                <IconButton onClick={addQuestion}>\n                    <AddIcon />\n                </IconButton>\n            </List>\n        </Grid>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    Typography,\n    ListItem,\n    ListItemText,\n    List,\n    IconButton,\n    ListItemSecondaryAction,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { Collections } from \"../../api/collections\";\nimport { AppContext } from \"../../Context\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AnimatedModal from \"../modals/AnimatedModal\";\nimport { QuestionsList } from \"./QuestionsList\";\n\nexport const CollectionsList = () => {\n    const { token } = useContext(AppContext);\n    const [collections, setCollections] = useState([]);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [questions, setQuestions] = useState([]);\n    const [activeCollectionId, setActiveCollectionId] = useState(\"\");\n\n    const toggleOpen = () => {\n        if (modalOpen) setActiveCollectionId(\"\");\n        setModalOpen((previous) => !previous);\n    };\n\n    function updateQuestion(question) {\n        if (findQuestionInActiveCollection(question._id).new) {\n            Collections.addQuestionToCollection(activeCollectionId, mapQuestion(question), token);\n        } else {\n            //To do update question\n            console.log(question);\n        }\n    }\n\n    function findQuestionInActiveCollection(questionId) {\n        return collections\n            .find((collection) => collection._id === activeCollectionId)\n            .questions.find((question) => question._id === questionId);\n    }\n\n    function mapQuestion({ id, text, correctAnswer, timeForAnswer, answer0, answer1, answer2, answer3 }) {\n        return {\n            _id: id,\n            text,\n            correctAnswer: --correctAnswer,\n            timeForAnswer,\n            answers: [answer0, answer1, answer2, answer3],\n        };\n    }\n\n    async function getCollections(result) {\n        const collections = await result;\n\n        if (!collections.error) setCollections(collections.reverse());\n    }\n\n    useEffect(() => {\n        getCollections(Collections.getAllCollections(token));\n    }, [token]);\n\n    function handleEditClick(event) {\n        const id = event.currentTarget.value;\n        const collection = collections.filter((collection) => collection._id === id)[0];\n\n        setActiveCollectionId(id);\n        setQuestions(collection.questions);\n        toggleOpen();\n    }\n\n    function addQuestionToCollection() {\n        const collectionsTemp = [...collections];\n\n        collectionsTemp\n            .find((collection) => collection._id === activeCollectionId)\n            .questions.push({\n                new: true,\n                _id: Date.now(),\n                text: \"\",\n                correctAnswer: 0,\n                timeForAnswer: 60,\n                answers: [\"\", \"\", \"\", \"\"],\n            });\n        setCollections(collectionsTemp);\n    }\n\n    return (\n        <>\n            <AnimatedModal toggleOpen={toggleOpen} open={modalOpen}>\n                <QuestionsList\n                    updateQuestion={updateQuestion}\n                    questionsArray={questions}\n                    addQuestion={addQuestionToCollection}\n                />\n            </AnimatedModal>\n\n            <List>\n                <Typography variant=\"h6\">Collections of Questions</Typography>\n                {!!collections.length ? (\n                    collections.map((collection) => {\n                        return (\n                            <ListItem key={collection._id}>\n                                <ListItemText primary={collection.name} />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        color=\"primary\"\n                                        edge=\"end\"\n                                        aria-label=\"edit\"\n                                        value={collection._id}\n                                        onClick={handleEditClick}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        );\n                    })\n                ) : (\n                    <CircularProgress />\n                )}\n            </List>\n        </>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    FormHelperText,\n    CircularProgress,\n    Button,\n    FormGroup,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { AppContext } from \"../../Context\";\nimport { Rooms } from \"../../api/rooms\";\nimport { Collections } from \"../../api/collections\";\n\nconst validationSchema = yup.object({\n    roomName: yup.string(\"Enter room name\").required(\"Name of room is required\"),\n});\n\nexport const CreateRoom = ({ handleClosePopup }) => {\n    const { token } = useContext(AppContext);\n    const [collections, setCollections] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    const onSubmit = async (values) => {\n        setError(<CircularProgress />);\n        const result = await Rooms.createRoom(\n            { name: values.roomName, questionsCollectionId: values.collectionsSelect },\n            token,\n        );\n        if (!result.error) {\n            setError(\"Room successfully created!\");\n            formik.values.roomName = \"\";\n            formik.values.collectionsSelect = \"\";\n        } else {\n            setError(result.error);\n        }\n    };\n\n    async function getCollections(result) {\n        const collectionsResponse = await result;\n\n        if (!collectionsResponse.error) {\n            setCollections(collectionsResponse.reverse());\n        } else {\n            setError(\"Something went wrong\");\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            roomName: \"\",\n            collectionsSelect: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit,\n    });\n\n    useEffect(() => {\n        getCollections(Collections.getAllCollections(token));\n    }, [token]);\n\n    return (\n        <form noValidate autoComplete=\"off\" className=\"createRoom\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <TextField\n                    placeholder=\"Room name\"\n                    name=\"roomName\"\n                    id=\"roomName\"\n                    label=\"Room name\"\n                    value={formik.values.roomName}\n                    onChange={formik.handleChange}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n                <FormControl>\n                    <InputLabel>Collections</InputLabel>\n                    <Select\n                        labelId=\"collectionsSelect\"\n                        id=\"collectionsSelect\"\n                        value={formik.values.collectionsSelect}\n                        name=\"collectionsSelect\"\n                        onChange={formik.handleChange}\n                    >\n                        <MenuItem value=\"None\">\n                            <em>None</em>\n                        </MenuItem>\n                        {collections.map(({ name, _id }) => (\n                            <MenuItem key={_id} value={_id}>\n                                {name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormHelperText error>{error}</FormHelperText>\n                {error !== \"Room successfully created!\" ? (\n                    <Button type=\"submit\">Submit</Button>\n                ) : (\n                    <Button onClick={handleClosePopup}>Back</Button>\n                )}\n            </FormGroup>\n        </form>\n    );\n};\n","import Popover from \"@material-ui/core/Popover\";\nimport { CreateRoom } from \"../forms/CreateRoom\";\n\nconst AddRoomModal = ({ open, handleClosePopup, anchorEl }) => {\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClosePopup}\n            anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n            }}\n            transformOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }}\n        >\n            <CreateRoom handleClosePopup={handleClosePopup} />\n        </Popover>\n    );\n};\n\nexport default AddRoomModal;\n","import { useContext, useEffect, useState } from \"react\";\nimport {\n    Typography,\n    ListItem,\n    ListItemText,\n    List,\n    ListItemSecondaryAction,\n    CircularProgress,\n    Button,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { Rooms } from \"../../api/rooms\";\nimport AddRoomModal from \"../modals/AddRoomModal\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppContext } from \"../../Context\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport copy from \"copy-to-clipboard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n    buttonModal: {\n        display: \"grid\",\n        justifyItems: \"center\",\n    },\n}));\n\nexport const RoomsList = () => {\n    const { token } = useContext(AppContext);\n    const [rooms, setRooms] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const matches = useMediaQuery(\"(min-width:600px)\");\n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(() => {\n        const getRooms = async () => {\n            setIsLoading(true);\n            const rooms = await Rooms.getRooms(token);\n            if (!rooms.error) setRooms(rooms.reverse());\n            setIsLoading(false);\n        };\n        getRooms(Rooms.getRooms(token));\n    }, [token]);\n\n    const handleCopyLink = (roomId) => {\n        // delete localhost for deployment\n        copy(`http://localhost:3000${process.env.PUBLIC_URL}/guest/${roomId}`);\n    };\n\n    const handleGoToRoom = (roomId) => {\n        history.push(`/room/${roomId}`);\n    };\n\n    const handleOpenPopup = (e) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClosePopup = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n\n    const roomList = rooms.map((room) => {\n        const date = new Date(room.createdAt).toLocaleString();\n        return (\n            <>\n                <ListItem key={room._id}>\n                    <ListItemText primary={room.name} secondary={date} />\n                    <ListItemSecondaryAction>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<LinkIcon />}\n                            onClick={() => handleCopyLink(room._id)}\n                        >\n                            {matches && \"Copy link\"}\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<InputIcon />}\n                            onClick={() => handleGoToRoom(room._id)}\n                        >\n                            {matches && \"Enter\"}\n                        </Button>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </>\n        );\n    });\n\n    return (\n        <List>\n            <Typography variant=\"h6\">Rooms</Typography>\n            {isLoading ? <CircularProgress /> : roomList}\n            <div className={classes.buttonModal}>\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<AddIcon />} onClick={handleOpenPopup}>\n                    Add a new room\n                </Button>\n            </div>\n            <AddRoomModal anchorEl={anchorEl} handleClosePopup={handleClosePopup} open={open} />\n        </List>\n    );\n};\n","import { Grid, Paper } from \"@material-ui/core\";\nimport { CollectionsList } from \"../../components/lists/CollectionsList\";\nimport { RoomsList } from \"../../components/lists/RoomsList\";\n\nexport const Profile = () => {\n    return (\n        <Grid container>\n            <Grid item xs={12} md={6}>\n                <Paper>\n                    <RoomsList />\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={6}>\n                <Paper>\n                    <CollectionsList />\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n","import { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppContext } from \"../Context\";\n \nconst PrivateRoute = ({ path, exact = false, component }) => {\n  const { token } = useContext(AppContext);\n  return token ? <Route path={path} exact={exact} component={component} /> : <Redirect to=\"/\" />;\n};\n\nexport default PrivateRoute;\n","import \"../../App.css\";\nimport { Container, Divider, Grid, List, ListItem, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { QuestionListItem } from \"../inputs\";\nimport { AppContext } from \"../../Context\";\nimport { Rooms } from \"../../api/rooms\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n        margin: theme.spacing(4, 0, 2),\n    },\n    smallPadding: {\n        padding: \"10px\",\n    },\n}));\n\nexport const MeetingView = () => {\n    // export const MeetingView = () => {\n    //     const roomId = \"6083c31a612ed37248485983\";\n    const { id } = useParams();\n    const roomId = id;\n\n    const classes = useStyles();\n    const { token } = useContext(AppContext);\n\n    const [room, setRoom] = useState({});\n    const [questionCollection, setQuestionCollection] = useState({});\n    const [guests, setGuests] = useState([]);\n\n    useEffect(() => {\n        let interval = setInterval(async () => {\n            console.log(\"refresh guests with: \" + roomId);\n            let roomResponse = await Rooms.getRoomById(roomId, token);\n            setGuests(roomResponse.guests);\n\n            return () => {\n                console.log(\"Clear interval: \" + interval + \" , \" + roomId);\n                clearInterval(interval);\n            };\n        }, 2000);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [roomId, token]);\n\n    useEffect(() => {\n        const fetchRoom = async () => {\n            let roomResponse = await Rooms.getRoomById(roomId, token);\n\n            setRoom(roomResponse);\n            setQuestionCollection(roomResponse.questionsCollectionId); //Note: its named \"id\" but it's whole object XD\n            setGuests(roomResponse.guests);\n\n            return roomResponse;\n        };\n        fetchRoom();\n    }, [roomId, token]);\n\n    const listQuestions = () => {\n        if (!questionCollection.questions || questionCollection.questions.length === 0) {\n            return <ListItem> There are no questions </ListItem>;\n        }\n        return questionCollection.questions.map((question) => {\n            return <QuestionListItem key={question._id} question={question} roomId={roomId} />;\n        });\n    };\n\n    const listGuests = () => {\n        if (!guests || guests.length === 0) {\n            return <ListItem> There are no guests</ListItem>;\n        } else {\n            return guests.map((guest) => <ListItem key={guest.email}>{guest.email}</ListItem>);\n        }\n    };\n    return (\n        <Container maxWidth=\"lg\" className={classes.smallPadding}>\n            <Typography variant=\"h4\" className={classes.smallPadding}>\n                Room {room.name}\n            </Typography>\n            <Grid container spacing={2}>\n                <Grid item xs={8}>\n                    <Paper>\n                        <Typography variant=\"h6\" className={classes.smallPadding}>\n                            Questions of {questionCollection.name}\n                        </Typography>\n                        <Divider />\n                        <div className={classes.demo}>\n                            <List>{listQuestions()}</List>\n                        </div>\n                    </Paper>\n                </Grid>\n                <Grid item xs={4}>\n                    <Paper>\n                        <Typography variant=\"h6\" className={classes.smallPadding}>\n                            Attendants\n                        </Typography>\n                        <Divider />\n                        <div className={classes.demo}>\n                            <List>{listGuests()}</List>\n                        </div>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nMeetingView.propTypes = {\n    roomId: PropTypes.string,\n    // formError: PropTypes.string,\n    // loading: PropTypes.bool,\n};\n","import { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"../views/home/Home\";\nimport { Profile } from \"../views/profile/Profile\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppContext } from \"../Context\";\nimport { MeetingView } from \"../components/forms/MeetingView\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootMain: {\n        flexGrow: 1,\n    },\n}));\n\nexport const AppSwitch = () => {\n    const { token } = useContext(AppContext);\n\n    const classes = useStyles();\n    return (\n        <main className={classes.rootMain}>\n            <Switch>\n                <Route exact path=\"/\" render={() => (token ? <Profile /> : <Home />)} />\n                <Route exact path=\"/guest/:id\" component={() => <div>Guest</div>} />\n                <PrivateRoute exact path=\"/profile\" component={Profile} />\n                <PrivateRoute path=\"/room/:id\" component={MeetingView} />\n            </Switch>\n        </main>\n    );\n};\n","import { ThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Store } from \"./Context\";\nimport { theme } from \"./themes/theme\";\nimport { Nav } from \"./layout/Nav\";\nimport { AppSwitch } from \"./switch/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootApp: {\n        minHeight: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\", \n        flexDirection: \"column\"\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <Store>\n            <ThemeProvider theme={theme}>\n                <Router basename=\"coders-camp-hackathon-2021-frontend\">\n                    <div className={classes.rootApp}>\n                        <Nav />\n                        <AppSwitch />\n                    </div>\n                </Router>\n            </ThemeProvider>\n        </Store>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}