{"version":3,"sources":["Context.jsx","themes/theme.js","layout/Nav.jsx","components/inputs/emailInput/EmailInput.jsx","components/inputs/passwordInput/PasswordInput.jsx","api/rooms.js","components/inputs/questionListItem/QuestionListItem.js","api/server.js","components/forms/LoginForm.jsx","components/inputs/usernameInput/name.jsx","components/forms/RegisterForm.jsx","views/home/homeImg.jpg","views/home/Home.jsx","api/collections.js","components/modals/modal.style.js","components/modals/AnimatedModal.jsx","components/forms/QuestionEdit.style.js","components/forms/QuestionEdit.jsx","components/lists/QuestionsList.jsx","components/lists/CollectionsList.jsx","components/forms/CreateRoom.jsx","components/modals/AddRoomModal.jsx","components/lists/RoomsList.jsx","views/profile/Profile.jsx","components/forms/GuestForm.jsx","views/guest/Guest.jsx","switch/PrivateRoute.jsx","components/forms/MeetingView.jsx","switch/Switch.jsx","App.js","index.js"],"names":["AppContext","createContext","Store","children","useState","localStorage","getItem","token","setToken","profile","setProfile","Provider","value","setNewToken","setItem","clearToken","removeItem","setNewProfile","JSON","stringify","clearProfile","theme","createMuiTheme","palette","primary","light","main","dark","secondary","useStyles","makeStyles","rootNav","titleNav","flexGrow","marginLeft","welcomeTitle","marginRight","Nav","useContext","classes","matches","useMediaQuery","className","AppBar","position","Toolbar","Typography","variant","noWrap","name","Button","color","startIcon","onClick","EmailInput","id","errors","onChange","FormControl","fullWidth","InputLabel","htmlFor","Input","type","error","aria-describedby","FormHelperText","PasswordInput","Rooms","fetch","apiUrl","method","mode","headers","Authorization","response","json","handleError","room","body","guest","roomId","email","questionId","answerIndex","answer","console","log","QuestionListItem","question","defaultTime","undefined","timeForAnswer","seconds","setSeconds","counter","setCounter","isActive","setIsActive","isGrayedOut","setIsGrayedOut","useEffect","intervalId","setInterval","clearInterval","itemClicked","pushActiveQuestion","selectedQuestionId","_id","ListItem","disabled","button","ListItemIcon","Tooltip","title","ListItemText","text","ListItemSecondaryAction","IconButton","edge","aria-label","Server","values","loginBody","user","smallPadding","padding","LoginForm","history","useHistory","formError","setFormError","loading","setLoading","validationSchema","yup","required","password","min","max","onSubmit","a","setSubmitting","login","result","statusCode","push","formik","useFormik","initialValues","handleSubmit","FormGroup","handleChange","isSubmitting","CircularProgress","size","UsernameInput","e","RegisterForm","setAction","register","setTimeout","loginDiv","width","margin","loginImg","border","borderRadius","marginTop","action","paddingBot","paddingBottom","paddingBotBig","marginBottom","Home","Grid","container","spacing","alignItems","style","item","md","xs","Select","event","target","MenuItem","src","homeImg","alt","align","Collections","collectionBody","questions","collection","modal","display","justifyContent","paper","backgroundColor","background","boxShadow","shadows","AnimatedModal","open","toggleOpen","Modal","aria-labelledby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","root","flexWrap","numberTextField","maxWidth","QuestionEdit","updateQuestion","answer0","answer1","answer2","answer3","correctAnswer","answers","TextField","label","map","index","QuestionsList","questionsArray","addQuestion","List","length","CollectionsList","collections","setCollections","modalOpen","setModalOpen","setQuestions","activeCollectionId","setActiveCollectionId","previous","reverse","handleEditClick","currentTarget","filter","getCollections","getAllCollections","find","new","addQuestionToCollection","mapQuestion","collectionsTemp","Date","now","Divider","roomName","CreateRoom","handleClosePopup","setError","createRoom","questionsCollectionId","collectionsSelect","collectionsResponse","noValidate","autoComplete","placeholder","helperText","touched","labelId","AddRoomModal","anchorEl","Popover","anchorOrigin","vertical","horizontal","transformOrigin","buttonModal","justifyItems","paddingTop","RoomsList","rooms","setRooms","isLoading","setIsLoading","setAnchorEl","getRooms","Boolean","roomList","date","createdAt","toLocaleString","copy","process","Profile","GuestForm","setGuestEmail","setGuestName","updateGuests","Guest","useParams","guestName","guestEmail","PrivateRoute","path","exact","component","to","demo","MeetingView","setRoom","questionCollection","setQuestionCollection","guests","setGuests","interval","getRoomById","roomResponse","fetchRoom","Container","closeRoom","rootMain","AppSwitch","render","rootApp","minHeight","flexDirection","App","ThemeProvider","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10221fbd.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nexport const AppContext = createContext();\n\nexport const Store = ({ children }) => {\n    const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n    const [profile, setProfile] = useState(localStorage.getItem(\"profile\") || null);\n\n    const setNewToken = (token) => {\n        setToken(token);\n        localStorage.setItem(\"token\", token);\n    };\n\n    const clearToken = () => {\n        setToken(\"\");\n        localStorage.removeItem(\"token\");\n    };\n\n    const setNewProfile = (profile) => {\n        setProfile(profile);\n        localStorage.setItem(\"profile\", JSON.stringify(profile));\n    };\n\n    const clearProfile = () => {\n        setProfile(null);\n        localStorage.removeItem(\"profile\");\n    };\n\n    return (\n        <AppContext.Provider value={{ token, setNewToken, clearToken, profile, setNewProfile, clearProfile }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nStore.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: \"#a269f8\",\n            main: \"#6e3bc4\",\n            dark: \"#380992\",\n        },\n        secondary: {\n            light: \"#c4f76d\",\n            main: \"#91c43b\",\n            dark: \"#5f9300\",\n        },\n    },\n});\n","import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { AppContext } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootNav: {\n        // flexGrow: 1, //todo it breaks Meeting View\n    },\n    titleNav: {\n        flexGrow: 1,\n        marginLeft: \"20px\",\n    },\n    welcomeTitle: {\n        marginRight: \"20px\",\n    },\n}));\n\nexport const Nav = () => {\n    const { token, profile, clearToken, clearProfile } = useContext(AppContext);\n    const classes = useStyles();\n    const matches = useMediaQuery(\"(min-width:600px)\");\n\n    const handleLogout = () => {\n        clearProfile();\n        clearToken();\n    };\n\n    return (\n        <div className={classes.rootNav}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <AssignmentIcon />\n                    <Typography className={classes.titleNav} variant=\"h6\">\n                        Questio\n                    </Typography>\n                    {token && (\n                        <>\n                            {profile && (\n                                <Typography variant=\"h6\" noWrap className={classes.welcomeTitle}>\n                                    {profile.name}\n                                </Typography>\n                            )}\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                startIcon={<ExitToAppIcon />}\n                                onClick={handleLogout}\n                            >\n                                {matches && \"Log out\"}\n                            </Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nexport const EmailInput = ({ id, name, errors, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Email</InputLabel>\n            <Input\n                type=\"email\"\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={onChange}\n                aria-describedby=\"email-input-field\"\n            />\n            <FormHelperText id=\"FormInputHelperText\">{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nEmailInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const PasswordInput = ({ id, errors, name, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Password</InputLabel>\n            <Input\n                type=\"password\"\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={onChange}\n                aria-describedby=\"password-input-field\"\n            />\n            <FormHelperText id=\"FormInputHelperText\">{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nPasswordInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","export class Rooms {\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/rooms\";\n\n    static async getRooms(token) {\n        try {\n            const response = await fetch(Rooms.apiUrl, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async getRoomById(id) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"GET\",\n                mode: \"cors\",\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async createRoom(room, token) {\n        // room = {name: \"string\", \"questionsCollectionId\": \"2039ir23f023f9023\" }\n        try {\n            const response = await fetch(Rooms.apiUrl, {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(room),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async changeRoomCollection(id, room, token) {\n        // room = { collectionId: \"2039ir23f023f9023\"}\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(room),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async changeRoomName(id, room, token) {\n        // room = {name: \"room name\"}\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(room),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async pushActiveQuestion(id, room, token) {\n        // room = {selectedQuestionId: \"2302340293r590\"}\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(room),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async updateGuests(id, guest) {\n        // guest = {email: \"test@test.com\", name: \"Albus Dumbledore\"}\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(guest),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async getActiveQuestion(roomId, email) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/activequestion?email=${email}`, {\n                method: \"GET\",\n                mode: \"cors\", // no auth is ok\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async postAnswer(roomId, questionId, answerIndex, email) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/answers`, {\n                method: \"POST\",\n                mode: \"cors\",\n                body: JSON.stringify({\n                    questionId: questionId,\n                    answer: answerIndex,\n                    email: email,\n                }),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async getGuestSummary(roomId, email) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/answers?email=${email}`, {\n                method: \"GET\",\n                mode: \"cors\", //no auth needed\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async closeRoom(roomId, token) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/close`, {\n                method: \"PATCH\",\n                mode: \"cors\", //no auth needed\n                Authorization: `Bearer ${token}`,\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static handleError(error) {\n        console.log(error);\n    }\n}\n","import { IconButton, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Tooltip } from \"@material-ui/core\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport PropTypes from \"prop-types\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Rooms } from \"../../../api/rooms\";\nimport { AppContext } from \"../../../Context\";\n\nexport const QuestionListItem = ({ question, roomId }) => {\n    const { token } = useContext(AppContext);\n\n    const defaultTime = question.timeForAnswer !== undefined ? question.timeForAnswer : 10;\n    const [seconds, setSeconds] = useState(defaultTime);\n    const [counter, setCounter] = useState(defaultTime);\n    const [isActive, setIsActive] = useState(false);\n    const [isGrayedOut, setIsGrayedOut] = useState(false);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isActive) {\n            intervalId = setInterval(() => {\n                setSeconds(counter);\n                setCounter((counter) => counter - 1);\n            }, 1000);\n        }\n\n        if (counter === -1) {\n            setIsActive(false);\n            setIsGrayedOut(true);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isActive, counter]);\n\n    const itemClicked = () => {\n        if (!isActive) {\n            Rooms.pushActiveQuestion(roomId, { selectedQuestionId: question._id }, token);\n        }\n        setIsActive(true);\n    };\n\n    const listAnswers = () => {\n        // todo: list answers\n        // if (!question || !question.answers || question.answers.length === 0) {\n        //     return <ListItemText>No answers</ListItemText>;\n        // }\n        // return question.answers.map((answer, index) => {\n        //     return <ListItemText key={index}>{answer}</ListItemText>;\n        // });\n        return undefined;\n    };\n\n    return (\n        <ListItem disabled={isGrayedOut} button onClick={itemClicked}>\n            <ListItemIcon>\n                <QuestionAnswerIcon />\n            </ListItemIcon>\n            <Tooltip title={\"Ask this question\"}>\n                <ListItemText primary={`${question.text}`} />\n            </Tooltip>\n            {/*<Collapse in={true} unmountOnExit>*/}\n            {/*    <List>{listAnswers()}</List>*/}\n            {/*</Collapse>*/}\n            {seconds}\n            <ListItemSecondaryAction>\n                <Tooltip title={\"Ask this question\"}>\n                    <IconButton disabled={isGrayedOut} edge=\"end\" aria-label=\"delete\" onClick={itemClicked}>\n                        <SendIcon />\n                    </IconButton>\n                </Tooltip>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n};\n\nQuestionListItem.propTypes = {\n    question: PropTypes.object.isRequired,\n    roomId: PropTypes.string.isRequired,\n};\n","export class Server {\r\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/users\";\r\n\r\n    static async login(values) {\r\n        try {\r\n            const response = await fetch(Server.apiUrl + \"/login\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n            });\r\n            const loginBody = await response.json();\r\n\r\n            return { token: loginBody.token, profile: loginBody.user };\r\n        } catch (error) {\r\n            Server.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async register(values) {\r\n        try {\r\n            const response = await fetch(Server.apiUrl + \"/register\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Server.handleError(error);\r\n        }\r\n    }\r\n\r\n    static handleError(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React, { useContext, useState } from \"react\";\nimport { Button, CircularProgress, FormGroup } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\n\nimport { EmailInput, PasswordInput } from \"../inputs\";\nimport { AppContext } from \"../../Context\";\nimport { Server } from \"../../api/server\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    smallPadding: {\n        padding: \"10px 10px 10px 0\",\n    },\n}));\n\nexport const LoginForm = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const { setNewToken, setNewProfile } = useContext(AppContext);\n    const [formError, setFormError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const validationSchema = yup.object({\n        email: yup.string(\"Enter email\").email(\"Enter a valid email\").required(\"Email is required\"),\n        password: yup\n            .string(\"Enter your password\")\n            .required(\"Password is required\")\n            .min(8, \"Password should be of minimum 8 characters length\")\n            .max(20, \"Password can't be longer than 20 characters.\")\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            ),\n    });\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        setFormError(\"\");\n        if (!loading) setLoading(() => true);\n        const result = await Server.login(values);\n\n        if (result.error) {\n            if (result.statusCode === 401) {\n                setFormError(\"Invalid credentials\");\n            } else {\n                setFormError(\"Something went wrong\");\n            }\n            setSubmitting(false);\n        } else {\n            setNewProfile(result.profile);\n            setNewToken(result.token);\n\n            setSubmitting(false);\n            history.push(\"/profile\");\n        }\n        setLoading(() => false);\n    };\n\n    const formik = useFormik({\n        initialValues: { email: \"\", password: \"\" },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form className=\"login\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <EmailInput\n                    errors={formik.errors.email}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <PasswordInput\n                    errors={formik.errors.password}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                />\n                <div id=\"formError\">{formError}</div>\n                <div className={classes.smallPadding}>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={formik.isSubmitting}>\n                        Login\n                    </Button>\n                    {loading && <CircularProgress size={24} />}\n                </div>\n            </FormGroup>\n        </form>\n    );\n};\n","import React from \"react\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const UsernameInput = ({ id, name, errors, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Name</InputLabel>\n            <Input\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={(e) => onChange(e)}\n                aria-describedby=\"email-input-field\"\n            />\n            <FormHelperText>{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nUsernameInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { Button, CircularProgress, FormGroup } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { EmailInput, PasswordInput } from \"../inputs\";\nimport { Server } from \"../../api/server\";\nimport { UsernameInput } from \"../inputs/usernameInput/name\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    smallPadding: {\n        padding: \"10px 10px 10px 0\",\n    },\n}));\n\nexport const RegisterForm = ({ setAction }) => {\n    const classes = useStyles();\n    const [formError, setFormError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const validationSchema = yup.object({\n        email: yup.string(\"Enter email\").email(\"Enter a valid email\").required(\"Email is required\"),\n        password: yup\n            .string(\"Enter your password\")\n            .required(\"Password is required\")\n            .min(8, \"Password should be of minimum 8 characters length\")\n            .max(20, \"Password can't be longer than 20 characters.\")\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            ),\n        name: yup.string(\"Enter your name\").required(\"Name is required\"),\n    });\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        setFormError(\"\");\n        if (!loading) setLoading(() => true);\n        const result = await Server.register(values);\n        if (result.error) {\n            if (result.statusCode === 401) {\n                setFormError(\"Invalid credentials\");\n            } else {\n                setFormError(\"Something went wrong\");\n            }\n            setSubmitting(false);\n        } else {\n            setSubmitting(false);\n            setFormError(\"Account successfully created!\");\n            setTimeout(() => setAction(\"login\"), 2000);\n        }\n        setLoading(() => false);\n    };\n\n    const formik = useFormik({\n        initialValues: { email: \"\", password: \"\" },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form className=\"register\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <UsernameInput\n                    errors={formik.errors.name}\n                    id=\"name\"\n                    name=\"name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                />\n                <EmailInput\n                    errors={formik.errors.email}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <PasswordInput\n                    errors={formik.errors.password}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                />\n                <div id=\"formError\">{formError}</div>\n                <div className={classes.smallPadding}>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={formik.isSubmitting}>\n                        Register\n                    </Button>\n                    {loading && <CircularProgress size={24} />}\n                </div>\n            </FormGroup>\n        </form>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/homeImg.05c2a606.jpg\";","import React, { useState } from \"react\";\nimport { FormControl, Grid, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { LoginForm } from \"../../components/forms/LoginForm\";\nimport { RegisterForm } from \"../../components/forms/RegisterForm\";\nimport homeImg from \"./homeImg.jpg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    loginDiv: {\n        width: \"80%\",\n        margin: \"auto\",\n    },\n    loginImg: {\n        border: \"6px solid #91C43B\",\n        borderRadius: \"10%\",\n        marginTop: \"25px\",\n    },\n    action: {\n        marginTop: \"30px\",\n    },\n    paddingBot: {\n        marginTop: \"80px\",\n        paddingBottom: \"30px\",\n    },\n    paddingBotBig: {\n        marginTop: \"40px\",\n        marginBottom: \"60px\",\n    },\n}));\n\nexport const Home = () => {\n    const classes = useStyles();\n    const [action, setAction] = useState(\"login\");\n    const history = useHistory();\n\n    const handleChange = (event) => {\n        setAction(event.target.value);\n    };\n\n    return (\n        <Grid\n            container\n            spacing={5}\n            alignItems=\"center\"\n            style={{\n                margin: 0,\n                width: \"100%\",\n            }}\n        >\n            <Grid item md={6} xs={12}>\n                <div className={classes.loginDiv}>\n                    <Typography className={classes.paddingBot} variant=\"h3\">\n                        Engagement Tool\n                    </Typography>\n                    <Typography className={classes.paddingBotBig} variant=\"h5\">\n                        Build better engagement of your remote teams with <b>Questio</b>! Check out how simple it is.\n                    </Typography>\n\n                    {action === \"login\" ? <LoginForm /> : <RegisterForm setAction={setAction} />}\n                    <div className={classes.action}>\n                        <FormControl>\n                            <Select value={action} onChange={handleChange}>\n                                <MenuItem value={\"login\"}>Log in</MenuItem>\n                                <MenuItem value={\"register\"}>Register</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n            </Grid>\n            <Grid item md={6} xs={12}>\n                <div className={classes.loginDiv}>\n                    <img src={homeImg} alt=\"homeImage\" width=\"95%\" className={classes.loginImg} />\n                    <Typography className={classes.paddingBotBig} align=\"center\" variant=\"h5\">\n                        \"If a man knows not which port he sails, no wind is favorable\" - Seneca\n                    </Typography>\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n","export class Collections {\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/collections\";\n\n    static async getAllCollections(token) {\n        try {\n            const response = await fetch(Collections.apiUrl, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async getCollectionById(id, token) {\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const collectionBody = await response.json();\n\n            return {\n                id: collectionBody._id,\n                name: collectionBody.name,\n                questions: collectionBody.questions,\n            };\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async createCollection(collection, token) {\n        // collection = {name: \"string\"}\n        try {\n            const response = await fetch(Collections.apiUrl, {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(collection),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async updateCollectionName(id, collection, token) {\n        // collection = {name: \"string\"}\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(collection),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async addQuestionToCollection(id, question, token) {\n        // question = {text: \"string\", answers: [...], correctAnswer: 0, timeForAnswer: 60}\n        console.log(id, question, token);\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({ question }),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static handleError(error) {\n        console.log(error);\n    }\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));","import React from \"react\";\nimport { useStyles } from \"./modal.style.js\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { Paper } from \"@material-ui/core\";\n\nexport default function AnimatedModal({ children, open, toggleOpen }) {\n    const classes = useStyles();\n\n    return (\n        <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={toggleOpen}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n                <Paper xs={12}>{children}</Paper>\n            </Fade>\n        </Modal>\n    );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n\n        \"& > *\": {\n            margin: \"0px 7px\",\n        },\n    },\n\n    numberTextField: {\n        maxWidth: \"50px\",\n    },\n\n    answer: {},\n}));\n","import React from \"react\";\nimport { TextField, ListItem, IconButton } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { useStyles } from \"./QuestionEdit.style\";\n\nexport const QuestionEdit = ({ question, updateQuestion }) => {\n    const classes = useStyles();\n    const validationSchema = yup.object({\n        text: yup.string().required(\"Question is required\"),\n        answer0: yup.string().required(\"At lest one answer is required\"),\n        answer1: yup.string(),\n        answer2: yup.string(),\n        answer3: yup.string(),\n        correctAnswer: yup\n            .number()\n            .required(\"You need to pass index of correct answer\")\n            .min(1, \"Index can't be smaller than 1\")\n            .max(4, \"Index can't be bigger than 4\"),\n        timeForAnswer: yup\n            .number()\n            .min(15, \"Time can't be shorter than 15 seconds\")\n            .max(120, \"Time can't be longer than 120 seconds\"),\n    });\n\n    const onSubmit = async (values) => {\n        updateQuestion(values);\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            _id: question._id,\n            text: question.text,\n            answer0: question.answers[0] || \"\",\n            answer1: question.answers[1] || \"\",\n            answer2: question.answers[2] || \"\",\n            answer3: question.answers[3] || \"\",\n            correctAnswer: question.correctAnswer ? question.correctAnswer + 1 : 1,\n            timeForAnswer: question.timeForAnswer,\n        },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <ListItem key={question._id}>\n            <form className={classes.root} onSubmit={formik.handleSubmit}>\n                <TextField\n                    onChange={formik.handleChange}\n                    name=\"text\"\n                    id=\"question\"\n                    label=\"Question\"\n                    value={formik.values.text}\n                />\n                <TextField\n                    onChange={formik.handleChange}\n                    name=\"timeForAnswer\"\n                    id=\"timeForAnswer\"\n                    type=\"number\"\n                    label=\"Time\"\n                    className={classes.numberTextField}\n                    value={formik.values.timeForAnswer}\n                />\n                {[0, 1, 2, 3].map((index) => {\n                    return (\n                        <TextField\n                            key={index}\n                            id=\"answer\"\n                            label={`Answer: ${index + 1}`}\n                            name={`answer${index}`}\n                            value={formik.values[`answer${index}`]}\n                            className={classes.answer}\n                            onChange={formik.handleChange}\n                        />\n                    );\n                })}\n                <TextField\n                    type=\"number\"\n                    onChange={formik.handleChange}\n                    name=\"correctAnswer\"\n                    id=\"correctAnswer\"\n                    label=\"Correct\"\n                    className={classes.numberTextField}\n                    value={formik.values.correctAnswer}\n                />\n                <IconButton\n                    color=\"primary\"\n                    edge=\"end\"\n                    aria-label=\"edit\"\n                    value={question._id}\n                    onClick={formik.handleSubmit}\n                >\n                    <SaveIcon />\n                </IconButton>\n\n                <div id=\"formError\">{formik.errors[0]}</div>\n            </form>\n        </ListItem>\n    );\n};\n","import React from \"react\";\nimport { Grid, Typography, List, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport { QuestionEdit } from \"../forms/QuestionEdit\";\n\nexport const QuestionsList = ({ questionsArray, updateQuestion, addQuestion }) => {\n    return (\n        <Grid item xs={12}>\n            <List>\n                <Typography variant=\"h6\">Collection</Typography>\n                {!!questionsArray.length\n                    ? questionsArray.map((question) => {\n                          return (\n                              <QuestionEdit key={question._id} question={question} updateQuestion={updateQuestion} />\n                          );\n                      })\n                    : \"This collection is empty\"}\n                <IconButton onClick={addQuestion}>\n                    <AddIcon />\n                </IconButton>\n            </List>\n        </Grid>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    Typography,\n    ListItem,\n    ListItemText,\n    List,\n    IconButton,\n    ListItemSecondaryAction,\n    CircularProgress, Divider, Paper,\n} from \"@material-ui/core\";\nimport { Collections } from \"../../api/collections\";\nimport { AppContext } from \"../../Context\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AnimatedModal from \"../modals/AnimatedModal\";\nimport { QuestionsList } from \"./QuestionsList\";\n\nexport const CollectionsList = () => {\n    const { token } = useContext(AppContext);\n    const [collections, setCollections] = useState([]);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [questions, setQuestions] = useState([]);\n    const [activeCollectionId, setActiveCollectionId] = useState(\"\");\n\n    const toggleOpen = () => {\n        if (modalOpen) setActiveCollectionId(\"\");\n        setModalOpen((previous) => !previous);\n    };\n\n    function updateQuestion(question) {\n        if (findQuestionInActiveCollection(question._id).new) {\n            Collections.addQuestionToCollection(activeCollectionId, mapQuestion(question), token);\n        } else {\n            //To do update question\n            console.log(question);\n        }\n    }\n\n    function findQuestionInActiveCollection(questionId) {\n        return collections\n            .find((collection) => collection._id === activeCollectionId)\n            .questions.find((question) => question._id === questionId);\n    }\n\n    function mapQuestion({ id, text, correctAnswer, timeForAnswer, answer0, answer1, answer2, answer3 }) {\n        return {\n            _id: id,\n            text,\n            correctAnswer: --correctAnswer,\n            timeForAnswer,\n            answers: [answer0, answer1, answer2, answer3],\n        };\n    }\n\n    async function getCollections(result) {\n        const collections = await result;\n\n        if (!collections.error) setCollections(collections.reverse());\n    }\n\n    useEffect(() => {\n        getCollections(Collections.getAllCollections(token));\n    }, [token]);\n\n    function handleEditClick(event) {\n        const id = event.currentTarget.value;\n        const collection = collections.filter((collection) => collection._id === id)[0];\n\n        setActiveCollectionId(id);\n        setQuestions(collection.questions);\n        toggleOpen();\n    }\n\n    function addQuestionToCollection() {\n        const collectionsTemp = [...collections];\n\n        collectionsTemp\n            .find((collection) => collection._id === activeCollectionId)\n            .questions.push({\n                new: true,\n                _id: Date.now(),\n                text: \"\",\n                correctAnswer: 0,\n                timeForAnswer: 60,\n                answers: [\"\", \"\", \"\", \"\"],\n            });\n        setCollections(collectionsTemp);\n    }\n\n    return (\n        <>\n            <AnimatedModal toggleOpen={toggleOpen} open={modalOpen}>\n                <QuestionsList\n                    updateQuestion={updateQuestion}\n                    questionsArray={questions}\n                    addQuestion={addQuestionToCollection}\n                />\n            </AnimatedModal>\n\n            <List>\n                <Typography variant=\"h6\">Collections of Questions</Typography>\n                <Divider />\n\n                {collections ? (\n                    collections.map((collection) => {\n                        return (\n                            <ListItem key={collection._id}>\n                                <ListItemText primary={collection.name} />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        color=\"primary\"\n                                        edge=\"end\"\n                                        aria-label=\"edit\"\n                                        value={collection._id}\n                                        onClick={handleEditClick}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        );\n                    })\n                ) : (\n                    <CircularProgress />\n                )}\n            </List>\n        </>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    FormHelperText,\n    CircularProgress,\n    Button,\n    FormGroup,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { AppContext } from \"../../Context\";\nimport { Rooms } from \"../../api/rooms\";\nimport { Collections } from \"../../api/collections\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst validationSchema = yup.object({\n    roomName: yup.string(\"Enter room name\").required(\"Name of room is required\"),\n});\nconst useStyles = makeStyles(() => ({\n    padding: {\n        padding: \"15px\"\n    },\n}));\n\nexport const CreateRoom = ({ handleClosePopup }) => {\n    const classes = useStyles();\n\n    const { token } = useContext(AppContext);\n    const [collections, setCollections] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    const onSubmit = async (values) => {\n        setError(<CircularProgress />);\n        const result = await Rooms.createRoom(\n            { name: values.roomName, questionsCollectionId: values.collectionsSelect },\n            token,\n        );\n        if (!result.error) {\n            setError(\"Room successfully created!\");\n            formik.values.roomName = \"\";\n            formik.values.collectionsSelect = \"\";\n        } else {\n            setError(result.error);\n        }\n    };\n\n    async function getCollections(result) {\n        const collectionsResponse = await result;\n\n        if (!collectionsResponse.error) {\n            setCollections(collectionsResponse.reverse());\n        } else {\n            setError(\"Something went wrong\");\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            roomName: \"\",\n            collectionsSelect: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit,\n    });\n\n    useEffect(() => {\n        getCollections(Collections.getAllCollections(token));\n    }, [token]);\n\n    return (\n        <form noValidate autoComplete=\"off\" className=\"createRoom\" onSubmit={formik.handleSubmit}>\n            <FormGroup className={classes.padding}>\n                <TextField\n                    placeholder=\"Room name\"\n                    name=\"roomName\"\n                    id=\"roomName\"\n                    label=\"Room name\"\n                    value={formik.values.roomName}\n                    onChange={formik.handleChange}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n                <FormControl>\n                    <InputLabel>Collections</InputLabel>\n                    <Select\n                        labelId=\"collectionsSelect\"\n                        id=\"collectionsSelect\"\n                        value={formik.values.collectionsSelect}\n                        name=\"collectionsSelect\"\n                        onChange={formik.handleChange}\n                    >\n                        <MenuItem value=\"None\">\n                            <em>None</em>\n                        </MenuItem>\n                        {collections.map(({ name, _id }) => (\n                            <MenuItem key={_id} value={_id}>\n                                {name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormHelperText error>{error}</FormHelperText>\n                {error !== \"Room successfully created!\" ? (\n                    <Button type=\"submit\">Submit</Button>\n                ) : (\n                    <Button onClick={handleClosePopup}>Back</Button>\n                )}\n            </FormGroup>\n        </form>\n    );\n};\n","import Popover from \"@material-ui/core/Popover\";\nimport { CreateRoom } from \"../forms/CreateRoom\";\n\nconst AddRoomModal = ({ open, handleClosePopup, anchorEl }) => {\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClosePopup}\n            anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n            }}\n            transformOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }}\n        >\n            <CreateRoom handleClosePopup={handleClosePopup} />\n        </Popover>\n    );\n};\n\nexport default AddRoomModal;\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Typography,\r\n    useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { Rooms } from \"../../api/rooms\";\r\nimport AddRoomModal from \"../modals/AddRoomModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppContext } from \"../../Context\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    buttonModal: {\r\n        display: \"grid\",\r\n        justifyItems: \"center\",\r\n        paddingTop: \"20px\",\r\n    },\r\n}));\r\n\r\nexport const RoomsList = () => {\r\n    const { token } = useContext(AppContext);\r\n    const [rooms, setRooms] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const matches = useMediaQuery(\"(min-width:600px)\");\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const getRooms = async () => {\r\n            setIsLoading(true);\r\n            const rooms = await Rooms.getRooms(token);\r\n            if (!rooms.error) setRooms(rooms.reverse());\r\n            setIsLoading(false);\r\n        };\r\n        getRooms(Rooms.getRooms(token));\r\n    }, [token]);\r\n\r\n    const handleCopyLink = (roomId) => {\r\n        // delete localhost for deployment\r\n        copy(`http://localhost:3000${process.env.PUBLIC_URL}/guest/${roomId}`);\r\n    };\r\n\r\n    const handleGoToRoom = (roomId) => {\r\n        history.push(`/room/${roomId}`);\r\n    };\r\n\r\n    const handleOpenPopup = (e) => {\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n\r\n    const handleClosePopup = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n\r\n    const roomList = rooms.map((room) => {\r\n        const date = new Date(room.createdAt).toLocaleString();\r\n        return (\r\n            <>\r\n                <ListItem key={room._id}>\r\n                    <ListItemText primary={room.name} secondary={date} />\r\n                    <ListItemSecondaryAction>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<LinkIcon />}\r\n                            onClick={() => handleCopyLink(room._id)}\r\n                        >\r\n                            {matches && \"Copy link\"}\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<InputIcon />}\r\n                            onClick={() => handleGoToRoom(room._id)}\r\n                        >\r\n                            {matches && \"Enter\"}\r\n                        </Button>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <List>\r\n            <Typography variant=\"h6\">Rooms</Typography>\r\n            <Divider />\r\n            {isLoading ? <CircularProgress /> : roomList}\r\n            <div className={classes.buttonModal}>\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<AddIcon />} onClick={handleOpenPopup}>\r\n                    Add a new room\r\n                </Button>\r\n            </div>\r\n            <AddRoomModal anchorEl={anchorEl} handleClosePopup={handleClosePopup} open={open} />\r\n        </List>\r\n    );\r\n};\r\n","import { Grid, Paper } from \"@material-ui/core\";\r\nimport { CollectionsList } from \"../../components/lists/CollectionsList\";\r\nimport { RoomsList } from \"../../components/lists/RoomsList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    padding: {\r\n        padding: \"15px\",\r\n    },\r\n}));\r\n\r\nexport const Profile = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.padding} spacing={5}>\r\n            <Grid className={classes.padding} item xs={12} md={6}>\r\n                <Paper className={classes.padding}>\r\n                    <RoomsList />\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid className={classes.padding} item xs={12} md={6}>\r\n                <Paper className={classes.padding}>\r\n                    <CollectionsList />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    FormHelperText,\n    CircularProgress,\n    Button,\n    FormGroup,\n    TextField,\n    FormControl,\n    InputLabel,\n    MenuItem,\n} from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Rooms } from \"../../api/rooms\";\nimport { Collections } from \"../../api/collections\";\n\nconst validationSchema = yup.object({\n    email: yup.string(\"Enter your e-mail\").required(\"E-mail is required\"),\n    name: yup.string(\"Enter your name\").required(\"Name is required\"),\n});\n\nexport const GuestForm = ({ id, setGuestEmail, setGuestName }) => {\n    const [error, setError] = useState(\"\");\n\n    const onSubmit = async (values) => {\n        setError(<CircularProgress />);\n        const result = await Rooms.updateGuests(id, { email: values.email, name: values.name });\n        if (!result.error) {\n            setError(\"You successfully entered the room!\");\n            setGuestEmail(values.email);\n            setGuestName(values.name);\n            formik.values.email = \"\";\n            formik.values.name = \"\";\n        } else {\n            setError(result.error);\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            name: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit,\n    });\n    return (\n        <form noValidate autoComplete=\"off\" className=\"createRoom\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <TextField\n                    placeholder=\"Your e-mail\"\n                    name=\"email\"\n                    id=\"email\"\n                    label=\"Your e-mail\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n                <TextField\n                    placeholder=\"Your name\"\n                    name=\"name\"\n                    id=\"name\"\n                    label=\"Your name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n                <FormHelperText error>{error}</FormHelperText>\n\n                <Button type=\"submit\">Submit</Button>\n            </FormGroup>\n        </form>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Rooms } from \"../../api/rooms\";\nimport { GuestForm } from \"../../components/forms/GuestForm\";\nimport { Paper, Typography } from \"@material-ui/core\";\n\nexport const Guest = () => {\n    const { id } = useParams();\n    const [room, setRoom] = useState(null);\n    const [guestName, setGuestName] = useState(\"\");\n    const [guestEmail, setGuestEmail] = useState(\"\");\n\n    useEffect(() => {});\n    return (\n        <div>\n            {!guestName && !guestEmail ? (\n                <GuestForm roomId={id} setGuestEmail={setGuestEmail} setGuestName={setGuestName} />\n            ) : (\n                <Paper>\n                    <Typography variant=\"h5\">Welcome {guestName}</Typography>\n                    <Typography variant=\"body1\">Please wait for questions</Typography>\n                </Paper>\n            )}\n        </div>\n    );\n};\n","import { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppContext } from \"../Context\";\n \nconst PrivateRoute = ({ path, exact = false, component }) => {\n  const { token } = useContext(AppContext);\n  return token ? <Route path={path} exact={exact} component={component} /> : <Redirect to=\"/\" />;\n};\n\nexport default PrivateRoute;\n","import \"../../App.css\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { QuestionListItem } from \"../inputs\";\r\nimport { AppContext } from \"../../Context\";\r\nimport { Rooms } from \"../../api/rooms\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    smallPadding: {\r\n        padding: \"10px\",\r\n    },\r\n}));\r\n\r\nexport const MeetingView = () => {\r\n    // export const MeetingView = () => {\r\n    //     const roomId = \"6083c31a612ed37248485983\";\r\n    const { id } = useParams();\r\n    const roomId = id;\r\n\r\n    const classes = useStyles();\r\n    const { token } = useContext(AppContext);\r\n\r\n    const [room, setRoom] = useState({});\r\n    const [questionCollection, setQuestionCollection] = useState({});\r\n    const [guests, setGuests] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(async () => {\r\n            console.log(\"refresh guests with: \" + roomId);\r\n            let roomResponse = await Rooms.getRoomById(roomId, token);\r\n            setGuests(roomResponse.guests);\r\n\r\n            return () => {\r\n                console.log(\"Clear interval: \" + interval + \" , \" + roomId);\r\n                clearInterval(interval);\r\n            };\r\n        }, 2000);\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [roomId, token]);\r\n\r\n    useEffect(() => {\r\n        const fetchRoom = async () => {\r\n            let roomResponse = await Rooms.getRoomById(roomId, token);\r\n\r\n            setRoom(roomResponse);\r\n            setQuestionCollection(roomResponse.questionsCollectionId); //Note: its named \"id\" but it's whole object XD\r\n            setGuests(roomResponse.guests);\r\n\r\n            return roomResponse;\r\n        };\r\n        fetchRoom();\r\n    }, [roomId, token]);\r\n\r\n    const listQuestions = () => {\r\n        if (!questionCollection.questions || questionCollection.questions.length === 0) {\r\n            return <ListItem> There are no questions </ListItem>;\r\n        }\r\n        return questionCollection.questions.map((question) => {\r\n            return <QuestionListItem key={question._id} question={question} roomId={roomId} />;\r\n        });\r\n    };\r\n\r\n    const listGuests = () => {\r\n        if (!guests || guests.length === 0) {\r\n            return <ListItem> There are no guests</ListItem>;\r\n        } else {\r\n            return guests.map((guest) => (\r\n                <ListItem key={guest.email}>\r\n                    <ListItemText secondary={guest.email}>\r\n                        <Typography variant=\"h6\">{guest.name}</Typography>\r\n                    </ListItemText>\r\n                </ListItem>\r\n            ));\r\n        }\r\n    };\r\n\r\n    const closeRoom = () => {\r\n        Rooms.closeRoom(roomId, token);\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.smallPadding}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={8}>\r\n                    <Typography variant=\"h4\" className={classes.smallPadding}>\r\n                        Room {room.name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Button\r\n                        style={{ marginTop: \"10px\", marginLeft: \"33%\" }}\r\n                        variant={\"outlined\"}\r\n                        color={\"primary\"}\r\n                        onClick={closeRoom}\r\n                    >\r\n                        Close room\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={8}>\r\n                    <Paper>\r\n                        <Typography variant=\"h6\" className={classes.smallPadding}>\r\n                            Questions of {questionCollection.name}\r\n                        </Typography>\r\n                        <Divider />\r\n                        <div className={classes.demo}>\r\n                            <List>{listQuestions()}</List>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Paper>\r\n                        <Typography variant=\"h6\" className={classes.smallPadding}>\r\n                            Attendants\r\n                        </Typography>\r\n                        <Divider />\r\n                        <div className={classes.demo}>\r\n                            <List>{listGuests()}</List>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nMeetingView.propTypes = {\r\n    roomId: PropTypes.string,\r\n    // formError: PropTypes.string,\r\n    // loading: PropTypes.bool,\r\n};\r\n","import { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"../views/home/Home\";\nimport { Profile } from \"../views/profile/Profile\";\nimport { Guest } from \"../views/guest/Guest\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppContext } from \"../Context\";\nimport { MeetingView } from \"../components/forms/MeetingView\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootMain: {\n        flexGrow: 1,\n    },\n}));\n\nexport const AppSwitch = () => {\n    const { token } = useContext(AppContext);\n\n    const classes = useStyles();\n    return (\n        <main className={classes.rootMain}>\n            <Switch>\n                <Route exact path=\"/\" render={() => (token ? <Profile /> : <Home />)} />\n                <Route exact path=\"/guest/:id\" render={() => (token ? <Profile /> : <Guest />)} />\n                <PrivateRoute exact path=\"/profile\" component={Profile} />\n                <PrivateRoute path=\"/room/:id\" component={MeetingView} />\n            </Switch>\n        </main>\n    );\n};\n","import { ThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Store } from \"./Context\";\nimport { theme } from \"./themes/theme\";\nimport { Nav } from \"./layout/Nav\";\nimport { AppSwitch } from \"./switch/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootApp: {\n        minHeight: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\", \n        flexDirection: \"column\"\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <Store>\n            <ThemeProvider theme={theme}>\n                <Router basename=\"coders-camp-hackathon-2021-frontend\">\n                    <div className={classes.rootApp}>\n                        <Nav />\n                        <AppSwitch />\n                    </div>\n                </Router>\n            </ThemeProvider>\n        </Store>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}