{"version":3,"sources":["Context.jsx","themes/theme.js","layout/Nav.jsx","components/inputs/emailInput/EmailInput.jsx","components/inputs/passwordInput/PasswordInput.jsx","api/rooms.js","components/inputs/questionListItem/QuestionListItem.js","api/server.js","components/forms/LoginForm.jsx","components/inputs/usernameInput/name.jsx","components/forms/RegisterForm.jsx","views/home/homeImg.jpg","views/home/Home.jsx","api/collections.js","components/modals/modal.style.js","components/modals/AnimatedModal.jsx","components/forms/QuestionEdit.style.js","components/forms/QuestionEdit.jsx","components/lists/QuestionsList.jsx","components/modals/Popup.jsx","components/forms/CreateCollection.jsx","components/lists/CollectionsList.jsx","components/forms/CreateRoom.jsx","components/modals/AddRoomModal.jsx","components/lists/RoomsList.jsx","views/profile/Profile.jsx","components/forms/GuestForm.jsx","components/forms/Question.jsx","views/guest/Guest.jsx","switch/PrivateRoute.jsx","components/forms/MeetingView.jsx","components/forms/MentorSummaryView.js","switch/Switch.jsx","App.js","index.js"],"names":["AppContext","createContext","Store","children","useState","localStorage","getItem","token","setToken","profile","setProfile","Provider","value","setNewToken","setItem","clearToken","removeItem","setNewProfile","JSON","stringify","clearProfile","theme","createMuiTheme","palette","primary","light","main","dark","secondary","useStyles","makeStyles","rootNav","titleNav","flexGrow","marginLeft","welcomeTitle","marginRight","Nav","useContext","classes","matches","useMediaQuery","history","useHistory","handleToMainPage","push","className","AppBar","position","Toolbar","onClick","Typography","variant","noWrap","name","Button","color","startIcon","EmailInput","id","errors","onChange","FormControl","fullWidth","InputLabel","htmlFor","Input","type","error","aria-describedby","FormHelperText","PasswordInput","Rooms","fetch","apiUrl","method","mode","headers","Authorization","response","json","handleError","room","body","guest","roomId","email","questionId","answerIndex","answer","console","log","QuestionListItem","question","defaultTime","undefined","timeForAnswer","seconds","setSeconds","counter","setCounter","isActive","setIsActive","isGrayedOut","setIsGrayedOut","useEffect","intervalId","setInterval","clearInterval","itemClicked","pushActiveQuestion","selectedQuestionId","_id","ListItem","disabled","button","ListItemIcon","Tooltip","title","ListItemText","text","ListItemSecondaryAction","IconButton","edge","aria-label","Server","values","loginBody","user","smallPadding","padding","LoginForm","formError","setFormError","loading","setLoading","validationSchema","yup","required","password","min","max","onSubmit","a","setSubmitting","login","result","statusCode","formik","useFormik","initialValues","handleSubmit","FormGroup","handleChange","isSubmitting","CircularProgress","size","UsernameInput","e","RegisterForm","setAction","register","setTimeout","loginDiv","width","margin","loginImg","border","borderRadius","marginTop","action","paddingBot","paddingBottom","paddingBotBig","marginBottom","Home","Grid","container","spacing","alignItems","style","item","md","xs","Select","event","target","MenuItem","src","homeImg","alt","align","Collections","collectionBody","questions","collectionName","collection","modal","display","justifyContent","paper","backgroundColor","background","boxShadow","shadows","AnimatedModal","open","toggleOpen","Modal","aria-labelledby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","root","flexWrap","numberTextField","maxWidth","QuestionEdit","updateQuestion","answer0","answer1","answer2","answer3","correctAnswer","answers","TextField","label","map","index","QuestionsList","questionsArray","addQuestion","List","length","Popup","handleClosePopup","anchorEl","Popover","anchorOrigin","vertical","horizontal","transformOrigin","CreateCollection","addCollection","setError","isSuccessful","setIsSuccessful","createCollection","roomName","collectionsSelect","noValidate","autoComplete","placeholder","CollectionName","helperText","touched","buttonModal","justifyItems","CollectionsList","collections","setCollections","modalOpen","setModalOpen","setQuestions","activeCollectionId","setActiveCollectionId","setAnchorEl","previous","reverse","handleEditClick","currentTarget","filter","getCollections","getAllCollections","find","new","addQuestionToCollection","mapQuestion","collectionsTemp","Date","now","Divider","CreateRoom","createRoom","questionsCollectionId","collectionsResponse","labelId","AddRoomModal","paddingTop","RoomsList","rooms","setRooms","isLoading","setIsLoading","getRooms","Boolean","roomList","date","createdAt","toLocaleString","copy","process","Profile","GuestForm","setGuestEmail","setGuestName","updateGuests","Question","activeQuestion","updatedAt","setActiveQuestion","handleAnswer","postAnswer","res","answerList","Guest","useParams","guestName","guestEmail","getActiveQuestion","interval","PrivateRoute","path","exact","component","to","demo","MeetingView","setRoom","questionCollection","setQuestionCollection","guests","setGuests","getRoomById","roomResponse","fetchRoom","Container","closeRoom","MentorSummaryView","getMentorSummary","getSummary","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","correctAnswers","allAnswers","rootMain","AppSwitch","render","rootApp","minHeight","flexDirection","App","ThemeProvider","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89d9d6d7.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nexport const AppContext = createContext();\n\nexport const Store = ({ children }) => {\n    const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n    const [profile, setProfile] = useState(localStorage.getItem(\"profile\") || null);\n\n    const setNewToken = (token) => {\n        setToken(token);\n        localStorage.setItem(\"token\", token);\n    };\n\n    const clearToken = () => {\n        setToken(\"\");\n        localStorage.removeItem(\"token\");\n    };\n\n    const setNewProfile = (profile) => {\n        setProfile(profile);\n        localStorage.setItem(\"profile\", JSON.stringify(profile));\n    };\n\n    const clearProfile = () => {\n        setProfile(null);\n        localStorage.removeItem(\"profile\");\n    };\n\n    return (\n        <AppContext.Provider value={{ token, setNewToken, clearToken, profile, setNewProfile, clearProfile }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nStore.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: \"#a269f8\",\n            main: \"#6e3bc4\",\n            dark: \"#380992\",\n        },\n        secondary: {\n            light: \"#c4f76d\",\n            main: \"#91c43b\",\n            dark: \"#5f9300\",\n        },\n    },\n});\n","import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppContext } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootNav: {\n        // flexGrow: 1, //todo it breaks Meeting View\n    },\n    titleNav: {\n        flexGrow: 1,\n        marginLeft: \"20px\",\n    },\n    welcomeTitle: {\n        marginRight: \"20px\",\n    },\n}));\n\nexport const Nav = () => {\n    const { token, profile, clearToken, clearProfile } = useContext(AppContext);\n    const classes = useStyles();\n    const matches = useMediaQuery(\"(min-width:600px)\");\n    const history = useHistory();\n\n    const handleLogout = () => {\n        clearProfile();\n        clearToken();\n        history.push(\"/\")\n    };\n\n    const handleToMainPage = () => {\n        history.push(\"/\")\n    }\n\n    return (\n        <div className={classes.rootNav}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <AssignmentIcon onClick={handleToMainPage} />\n                    <Typography className={classes.titleNav} variant=\"h6\" onClick={handleToMainPage}>\n                        Questio\n                    </Typography>\n                    {token && (\n                        <>\n                            {profile && (\n                                <Typography variant=\"h6\" noWrap className={classes.welcomeTitle}>\n                                    {profile.name}\n                                </Typography>\n                            )}\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                startIcon={<ExitToAppIcon />}\n                                onClick={handleLogout}\n                            >\n                                {matches && \"Log out\"}\n                            </Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nexport const EmailInput = ({ id, name, errors, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Email</InputLabel>\n            <Input\n                type=\"email\"\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={onChange}\n                aria-describedby=\"email-input-field\"\n            />\n            <FormHelperText id=\"FormInputHelperText\">{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nEmailInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const PasswordInput = ({ id, errors, name, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Password</InputLabel>\n            <Input\n                type=\"password\"\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={onChange}\n                aria-describedby=\"password-input-field\"\n            />\n            <FormHelperText id=\"FormInputHelperText\">{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nPasswordInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","export class Rooms {\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/rooms\";\n\n    static async getRooms(token) {\n        try {\n            const response = await fetch(Rooms.apiUrl, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async getRoomById(id) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"GET\",\n                mode: \"cors\",\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async createRoom(room, token) {\n        // room = {name: \"string\", \"questionsCollectionId\": \"2039ir23f023f9023\" }\n        try {\n            const response = await fetch(Rooms.apiUrl, {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(room),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async changeRoomCollection(id, room, token) {\n        // room = { collectionId: \"2039ir23f023f9023\"}\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(room),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async changeRoomName(id, room, token) {\n        // room = {name: \"room name\"}\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(room),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async pushActiveQuestion(id, room, token) {\n        // room = {selectedQuestionId: \"2302340293r590\"}\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(room),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async updateGuests(id, guest) {\n        // guest = {email: \"test@test.com\", name: \"Albus Dumbledore\"}\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${id}/guests`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(guest),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async getActiveQuestion(roomId, email) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/activequestion?email=${email}`, {\n                method: \"GET\",\n                mode: \"cors\", // no auth is ok\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async postAnswer(roomId, questionId, answerIndex, email) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/answers`, {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    questionId: questionId,\n                    answer: answerIndex,\n                    email: email,\n                }),\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async getGuestSummary(roomId, email) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/answers?email=${email}`, {\n                method: \"GET\",\n                mode: \"cors\", //no auth needed\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async getMentorSummary(roomId, token) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/summary`, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static async closeRoom(roomId, token) {\n        try {\n            const response = await fetch(`${Rooms.apiUrl}/${roomId}/close`, {\n                method: \"PATCH\",\n                mode: \"cors\", //no auth needed\n                Authorization: `Bearer ${token}`,\n            });\n            return await response.json();\n        } catch (error) {\n            Rooms.handleError(error);\n        }\n    }\n\n    static handleError(error) {\n        console.log(error);\n    }\n}\n","import { IconButton, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Tooltip } from \"@material-ui/core\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport PropTypes from \"prop-types\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Rooms } from \"../../../api/rooms\";\nimport { AppContext } from \"../../../Context\";\n\nexport const QuestionListItem = ({ question, roomId }) => {\n    const { token } = useContext(AppContext);\n\n    const defaultTime = question.timeForAnswer !== undefined ? question.timeForAnswer : 10;\n    const [seconds, setSeconds] = useState(defaultTime);\n    const [counter, setCounter] = useState(defaultTime);\n    const [isActive, setIsActive] = useState(false);\n    const [isGrayedOut, setIsGrayedOut] = useState(false);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isActive) {\n            intervalId = setInterval(() => {\n                setSeconds(counter);\n                setCounter((counter) => counter - 1);\n            }, 1000);\n        }\n\n        if (counter === -1) {\n            setIsActive(false);\n            setIsGrayedOut(true);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isActive, counter]);\n\n    const itemClicked = () => {\n        if (!isActive) {\n            Rooms.pushActiveQuestion(roomId, { selectedQuestionId: question._id }, token);\n        }\n        setIsActive(true);\n    };\n\n    const listAnswers = () => {\n        // todo: list answers\n        // if (!question || !question.answers || question.answers.length === 0) {\n        //     return <ListItemText>No answers</ListItemText>;\n        // }\n        // return question.answers.map((answer, index) => {\n        //     return <ListItemText key={index}>{answer}</ListItemText>;\n        // });\n        return undefined;\n    };\n\n    return (\n        <ListItem disabled={isGrayedOut} button onClick={itemClicked}>\n            <ListItemIcon>\n                <QuestionAnswerIcon />\n            </ListItemIcon>\n            <Tooltip title={\"Ask this question\"}>\n                <ListItemText primary={`${question.text}`} />\n            </Tooltip>\n            {/*<Collapse in={true} unmountOnExit>*/}\n            {/*    <List>{listAnswers()}</List>*/}\n            {/*</Collapse>*/}\n            {seconds}\n            <ListItemSecondaryAction>\n                <Tooltip title={\"Ask this question\"}>\n                    <IconButton disabled={isGrayedOut} edge=\"end\" aria-label=\"delete\" onClick={itemClicked}>\n                        <SendIcon />\n                    </IconButton>\n                </Tooltip>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n};\n\nQuestionListItem.propTypes = {\n    question: PropTypes.object.isRequired,\n    roomId: PropTypes.string.isRequired,\n};\n","export class Server {\r\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/users\";\r\n\r\n    static async login(values) {\r\n        try {\r\n            const response = await fetch(Server.apiUrl + \"/login\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n            });\r\n            const loginBody = await response.json();\r\n\r\n            return { token: loginBody.token, profile: loginBody.user };\r\n        } catch (error) {\r\n            Server.handleError(error);\r\n        }\r\n    }\r\n\r\n    static async register(values) {\r\n        try {\r\n            const response = await fetch(Server.apiUrl + \"/register\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            Server.handleError(error);\r\n        }\r\n    }\r\n\r\n    static handleError(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React, { useContext, useState } from \"react\";\nimport { Button, CircularProgress, FormGroup } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\n\nimport { EmailInput, PasswordInput } from \"../inputs\";\nimport { AppContext } from \"../../Context\";\nimport { Server } from \"../../api/server\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    smallPadding: {\n        padding: \"10px 10px 10px 0\",\n    },\n}));\n\nexport const LoginForm = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const { setNewToken, setNewProfile } = useContext(AppContext);\n    const [formError, setFormError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const validationSchema = yup.object({\n        email: yup.string(\"Enter email\").email(\"Enter a valid email\").required(\"Email is required\"),\n        password: yup\n            .string(\"Enter your password\")\n            .required(\"Password is required\")\n            .min(8, \"Password should be of minimum 8 characters length\")\n            .max(20, \"Password can't be longer than 20 characters.\")\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            ),\n    });\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        setFormError(\"\");\n        if (!loading) setLoading(() => true);\n        const result = await Server.login(values);\n\n        if (result.error) {\n            if (result.statusCode === 401) {\n                setFormError(\"Invalid credentials\");\n            } else {\n                setFormError(\"Something went wrong\");\n            }\n            setSubmitting(false);\n        } else {\n            setNewProfile(result.profile);\n            setNewToken(result.token);\n\n            setSubmitting(false);\n            history.push(\"/profile\");\n        }\n        setLoading(() => false);\n    };\n\n    const formik = useFormik({\n        initialValues: { email: \"\", password: \"\" },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form className=\"login\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <EmailInput\n                    errors={formik.errors.email}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <PasswordInput\n                    errors={formik.errors.password}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                />\n                <div id=\"formError\">{formError}</div>\n                <div className={classes.smallPadding}>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={formik.isSubmitting}>\n                        Login\n                    </Button>\n                    {loading && <CircularProgress size={24} />}\n                </div>\n            </FormGroup>\n        </form>\n    );\n};\n","import React from \"react\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const UsernameInput = ({ id, name, errors, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Name</InputLabel>\n            <Input\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={(e) => onChange(e)}\n                aria-describedby=\"email-input-field\"\n            />\n            <FormHelperText>{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nUsernameInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { Button, CircularProgress, FormGroup } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { EmailInput, PasswordInput } from \"../inputs\";\nimport { Server } from \"../../api/server\";\nimport { UsernameInput } from \"../inputs/usernameInput/name\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    smallPadding: {\n        padding: \"10px 10px 10px 0\",\n    },\n}));\n\nexport const RegisterForm = ({ setAction }) => {\n    const classes = useStyles();\n    const [formError, setFormError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const validationSchema = yup.object({\n        email: yup.string(\"Enter email\").email(\"Enter a valid email\").required(\"Email is required\"),\n        password: yup\n            .string(\"Enter your password\")\n            .required(\"Password is required\")\n            .min(8, \"Password should be of minimum 8 characters length\")\n            .max(20, \"Password can't be longer than 20 characters.\")\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            ),\n        name: yup.string(\"Enter your name\").required(\"Name is required\"),\n    });\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        setFormError(\"\");\n        if (!loading) setLoading(() => true);\n        const result = await Server.register(values);\n        if (result.error) {\n            if (result.statusCode === 401) {\n                setFormError(\"Invalid credentials\");\n            } else {\n                setFormError(\"Something went wrong\");\n            }\n            setSubmitting(false);\n        } else {\n            setSubmitting(false);\n            setFormError(\"Account successfully created!\");\n            setTimeout(() => setAction(\"login\"), 2000);\n        }\n        setLoading(() => false);\n    };\n\n    const formik = useFormik({\n        initialValues: { email: \"\", password: \"\" },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form className=\"register\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <UsernameInput\n                    errors={formik.errors.name}\n                    id=\"name\"\n                    name=\"name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                />\n                <EmailInput\n                    errors={formik.errors.email}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <PasswordInput\n                    errors={formik.errors.password}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                />\n                <div id=\"formError\">{formError}</div>\n                <div className={classes.smallPadding}>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={formik.isSubmitting}>\n                        Register\n                    </Button>\n                    {loading && <CircularProgress size={24} />}\n                </div>\n            </FormGroup>\n        </form>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/homeImg.05c2a606.jpg\";","import React, { useState } from \"react\";\nimport { FormControl, Grid, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { LoginForm } from \"../../components/forms/LoginForm\";\nimport { RegisterForm } from \"../../components/forms/RegisterForm\";\nimport homeImg from \"./homeImg.jpg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    loginDiv: {\n        width: \"80%\",\n        margin: \"auto\",\n    },\n    loginImg: {\n        border: \"6px solid #91C43B\",\n        borderRadius: \"10%\",\n        marginTop: \"25px\",\n    },\n    action: {\n        marginTop: \"30px\",\n    },\n    paddingBot: {\n        marginTop: \"80px\",\n        paddingBottom: \"30px\",\n    },\n    paddingBotBig: {\n        marginTop: \"40px\",\n        marginBottom: \"60px\",\n    },\n}));\n\nexport const Home = () => {\n    const classes = useStyles();\n    const [action, setAction] = useState(\"login\");\n    const history = useHistory();\n\n    const handleChange = (event) => {\n        setAction(event.target.value);\n    };\n\n    return (\n        <Grid\n            container\n            spacing={5}\n            alignItems=\"center\"\n            style={{\n                margin: 0,\n                width: \"100%\",\n            }}\n        >\n            <Grid item md={6} xs={12}>\n                <div className={classes.loginDiv}>\n                    <Typography className={classes.paddingBot} variant=\"h3\">\n                        Engagement Tool\n                    </Typography>\n                    <Typography className={classes.paddingBotBig} variant=\"h5\">\n                        Build better engagement of your remote teams with <b>Questio</b>! Check out how simple it is.\n                    </Typography>\n\n                    {action === \"login\" ? <LoginForm /> : <RegisterForm setAction={setAction} />}\n                    <div className={classes.action}>\n                        <FormControl>\n                            <Select value={action} onChange={handleChange}>\n                                <MenuItem value={\"login\"}>Log in</MenuItem>\n                                <MenuItem value={\"register\"}>Register</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n            </Grid>\n            <Grid item md={6} xs={12}>\n                <div className={classes.loginDiv}>\n                    <img src={homeImg} alt=\"homeImage\" width=\"95%\" className={classes.loginImg} />\n                    <Typography className={classes.paddingBotBig} align=\"center\" variant=\"h5\">\n                        \"If a man knows not which port he sails, no wind is favorable\" - Seneca\n                    </Typography>\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n","export class Collections {\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/collections\";\n\n    static async getAllCollections(token) {\n        try {\n            const response = await fetch(Collections.apiUrl, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async getCollectionById(id, token) {\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const collectionBody = await response.json();\n\n            return {\n                id: collectionBody._id,\n                name: collectionBody.name,\n                questions: collectionBody.questions,\n            };\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async createCollection(collectionName, token) {\n        // collection = {name: \"string\"}\n        const collection = { name: collectionName };\n\n        try {\n            const response = await fetch(Collections.apiUrl, {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(collection),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async updateCollectionName(id, collection, token) {\n        // collection = {name: \"string\"}\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(collection),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async addQuestionToCollection(id, question, token) {\n        // question = {text: \"string\", answers: [...], correctAnswer: 0, timeForAnswer: 60}\n        console.log(id, question, token);\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({ question }),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static handleError(error) {\n        console.log(error);\n    }\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));","import React from \"react\";\nimport { useStyles } from \"./modal.style.js\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { Paper } from \"@material-ui/core\";\n\nexport default function AnimatedModal({ children, open, toggleOpen }) {\n    const classes = useStyles();\n\n    return (\n        <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={toggleOpen}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n                <Paper xs={12}>{children}</Paper>\n            </Fade>\n        </Modal>\n    );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n\n        \"& > *\": {\n            margin: \"0px 7px\",\n        },\n    },\n\n    numberTextField: {\n        maxWidth: \"50px\",\n    },\n\n    answer: {},\n}));\n","import React from \"react\";\nimport { TextField, ListItem, IconButton } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { useStyles } from \"./QuestionEdit.style\";\n\nexport const QuestionEdit = ({ question, updateQuestion }) => {\n    const classes = useStyles();\n    const validationSchema = yup.object({\n        text: yup.string().required(\"Question is required\"),\n        answer0: yup.string().required(\"At lest one answer is required\"),\n        answer1: yup.string(),\n        answer2: yup.string(),\n        answer3: yup.string(),\n        correctAnswer: yup\n            .number()\n            .required(\"You need to pass index of correct answer\")\n            .min(1, \"Index can't be smaller than 1\")\n            .max(4, \"Index can't be bigger than 4\"),\n        timeForAnswer: yup\n            .number()\n            .min(15, \"Time can't be shorter than 15 seconds\")\n            .max(120, \"Time can't be longer than 120 seconds\"),\n    });\n\n    const onSubmit = async (values) => {\n        updateQuestion(values);\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            _id: question._id,\n            text: question.text,\n            answer0: question.answers[0] || \"\",\n            answer1: question.answers[1] || \"\",\n            answer2: question.answers[2] || \"\",\n            answer3: question.answers[3] || \"\",\n            correctAnswer: question.correctAnswer ? question.correctAnswer + 1 : 1,\n            timeForAnswer: question.timeForAnswer,\n        },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <ListItem key={question._id}>\n            <form className={classes.root} onSubmit={formik.handleSubmit}>\n                <TextField\n                    onChange={formik.handleChange}\n                    name=\"text\"\n                    id=\"question\"\n                    label=\"Question\"\n                    value={formik.values.text}\n                />\n                <TextField\n                    onChange={formik.handleChange}\n                    name=\"timeForAnswer\"\n                    id=\"timeForAnswer\"\n                    type=\"number\"\n                    label=\"Time\"\n                    className={classes.numberTextField}\n                    value={formik.values.timeForAnswer}\n                />\n                {[0, 1, 2, 3].map((index) => {\n                    return (\n                        <TextField\n                            key={index}\n                            id=\"answer\"\n                            label={`Answer: ${index + 1}`}\n                            name={`answer${index}`}\n                            value={formik.values[`answer${index}`]}\n                            className={classes.answer}\n                            onChange={formik.handleChange}\n                        />\n                    );\n                })}\n                <TextField\n                    type=\"number\"\n                    onChange={formik.handleChange}\n                    name=\"correctAnswer\"\n                    id=\"correctAnswer\"\n                    label=\"Correct\"\n                    className={classes.numberTextField}\n                    value={formik.values.correctAnswer}\n                />\n                <IconButton\n                    color=\"primary\"\n                    edge=\"end\"\n                    aria-label=\"edit\"\n                    value={question._id}\n                    onClick={formik.handleSubmit}\n                >\n                    <SaveIcon />\n                </IconButton>\n\n                <div id=\"formError\">{formik.errors[0]}</div>\n            </form>\n        </ListItem>\n    );\n};\n","import React from \"react\";\r\nimport { Grid, IconButton, List, Typography } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport { QuestionEdit } from \"../forms/QuestionEdit\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    smallPadding: {\r\n        padding: \"20px\",\r\n    },\r\n}));\r\n\r\nexport const QuestionsList = ({ questionsArray, updateQuestion, addQuestion }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={12}>\r\n            <List>\r\n                <Typography className={classes.smallPadding} variant=\"h5\">\r\n                    Collection\r\n                </Typography>\r\n                {!!questionsArray.length\r\n                    ? questionsArray.map((question) => {\r\n                          return (\r\n                              <QuestionEdit key={question._id} question={question} updateQuestion={updateQuestion} />\r\n                          );\r\n                      })\r\n                    : \"This collection is empty\"}\r\n                <IconButton onClick={addQuestion}>\r\n                    <AddIcon />\r\n                </IconButton>\r\n            </List>\r\n        </Grid>\r\n    );\r\n};\r\n","import Popover from \"@material-ui/core/Popover\";\n\nexport const Popup = ({ open, handleClosePopup, anchorEl, children }) => {\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClosePopup}\n            anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n            }}\n            transformOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }}\n        >\n            {children}\n        </Popover>\n    );\n};\n","import React, { useContext, useState } from \"react\";\nimport { FormHelperText, Button, FormGroup, TextField } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { AppContext } from \"../../Context\";\nimport { Collections } from \"../../api/collections\";\n\nconst validationSchema = yup.object({\n    collectionName: yup.string(\"Enter room name\").required(\"Name of room is required\"),\n});\n\nexport const CreateCollection = ({ handleClosePopup, addCollection }) => {\n    const { token } = useContext(AppContext);\n    const [error, setError] = useState(\"\");\n    const [isSuccessful, setIsSuccessful] = useState(false);\n\n    const onSubmit = async (values) => {\n        setError(\"\");\n        const result = await Collections.createCollection(values.collectionName, token);\n        if (!result.error) {\n            addCollection(result);\n            setIsSuccessful(true);\n            formik.values.roomName = \"\";\n            formik.values.collectionsSelect = \"\";\n        } else {\n            setIsSuccessful(false);\n            setError(result.error);\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            collectionName: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form noValidate autoComplete=\"off\" className=\"createCollection\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <TextField\n                    placeholder=\"Collection name\"\n                    name=\"collectionName\"\n                    id=\"collectionName\"\n                    label=\"Collection name\"\n                    value={formik.values.CollectionName}\n                    onChange={formik.handleChange}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n                <FormHelperText error>{error || formik.errors[0]}</FormHelperText>\n                {!isSuccessful ? (\n                    <Button type=\"submit\">Submit</Button>\n                ) : (\n                    <Button onClick={handleClosePopup}>Back</Button>\n                )}\n            </FormGroup>\n        </form>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    Typography,\n    ListItem,\n    ListItemText,\n    List,\n    IconButton,\n    ListItemSecondaryAction,\n    CircularProgress,\n    Button,\n    makeStyles,\n    Divider,\n} from \"@material-ui/core\";\nimport { Collections } from \"../../api/collections\";\nimport { AppContext } from \"../../Context\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AnimatedModal from \"../modals/AnimatedModal\";\nimport { QuestionsList } from \"./QuestionsList\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Popup } from \"../modals/Popup\";\nimport { CreateCollection } from \"../forms/CreateCollection\";\n\nconst useStyles = makeStyles(() => ({\n    buttonModal: {\n        display: \"grid\",\n        justifyItems: \"center\",\n    },\n}));\n\nexport const CollectionsList = () => {\n    const { token } = useContext(AppContext);\n    const [collections, setCollections] = useState([]);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [questions, setQuestions] = useState([]);\n    const [activeCollectionId, setActiveCollectionId] = useState(\"\");\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    const toggleOpen = () => {\n        if (modalOpen) setActiveCollectionId(\"\");\n        setModalOpen((previous) => !previous);\n    };\n\n    function addCollection(collection) {\n        setCollections([...collections, collection]);\n    }\n\n    function updateQuestion(question) {\n        if (findQuestionInActiveCollection(question._id).new) {\n            Collections.addQuestionToCollection(activeCollectionId, mapQuestion(question), token);\n        } else {\n            //To do update question\n            console.log(question);\n        }\n    }\n\n    function findQuestionInActiveCollection(questionId) {\n        return collections\n            .find((collection) => collection._id === activeCollectionId)\n            .questions.find((question) => question._id === questionId);\n    }\n\n    function mapQuestion({ id, text, correctAnswer, timeForAnswer, answer0, answer1, answer2, answer3 }) {\n        return {\n            _id: id,\n            text,\n            correctAnswer: --correctAnswer,\n            timeForAnswer,\n            answers: [answer0, answer1, answer2, answer3],\n        };\n    }\n\n    async function getCollections(result) {\n        const collections = await result;\n\n        if (!collections.error) setCollections(collections.reverse());\n    }\n\n    useEffect(() => {\n        getCollections(Collections.getAllCollections(token));\n    }, [token]);\n\n    function handleEditClick(event) {\n        const id = event.currentTarget.value;\n        const collection = collections.filter((collection) => collection._id === id)[0];\n\n        setActiveCollectionId(id);\n        setQuestions(collection.questions);\n        toggleOpen();\n    }\n\n    function addQuestionToCollection() {\n        const collectionsTemp = [...collections];\n\n        collectionsTemp\n            .find((collection) => collection._id === activeCollectionId)\n            .questions.push({\n                new: true,\n                _id: Date.now(),\n                text: \"\",\n                correctAnswer: 0,\n                timeForAnswer: 60,\n                answers: [\"\", \"\", \"\", \"\"],\n            });\n        setCollections(collectionsTemp);\n    }\n\n    const handleOpenPopup = (e) => {\n        console.log(e.currentTarget);\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClosePopup = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <AnimatedModal toggleOpen={toggleOpen} open={modalOpen}>\n                <QuestionsList\n                    updateQuestion={updateQuestion}\n                    questionsArray={questions}\n                    addQuestion={addQuestionToCollection}\n                />\n            </AnimatedModal>\n\n            <List>\n                <Typography variant=\"h6\">Collections of Questions</Typography>\n                <Divider />\n\n                {collections ? (\n                    collections.map((collection) => {\n                        return (\n                            <ListItem key={collection._id}>\n                                <ListItemText primary={collection.name} />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        color=\"primary\"\n                                        edge=\"end\"\n                                        aria-label=\"edit\"\n                                        value={collection._id}\n                                        onClick={handleEditClick}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        );\n                    })\n                ) : (\n                    <CircularProgress />\n                )}\n                <div className={classes.buttonModal}>\n                    <Button variant=\"contained\" color=\"secondary\" startIcon={<AddIcon />} onClick={handleOpenPopup}>\n                        Add new Collection\n                    </Button>\n                </div>\n                <Popup anchorEl={anchorEl} handleClosePopup={handleClosePopup} open={!!anchorEl}>\n                    <CreateCollection handleClosePopup={handleClosePopup} addCollection={addCollection} />\n                </Popup>\n            </List>\n        </>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    FormHelperText,\n    CircularProgress,\n    Button,\n    FormGroup,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { AppContext } from \"../../Context\";\nimport { Rooms } from \"../../api/rooms\";\nimport { Collections } from \"../../api/collections\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst validationSchema = yup.object({\n    roomName: yup.string(\"Enter room name\").required(\"Name of room is required\"),\n});\nconst useStyles = makeStyles(() => ({\n    padding: {\n        padding: \"15px\"\n    },\n}));\n\nexport const CreateRoom = ({ handleClosePopup }) => {\n    const classes = useStyles();\n\n    const { token } = useContext(AppContext);\n    const [collections, setCollections] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    const onSubmit = async (values) => {\n        setError(<CircularProgress />);\n        const result = await Rooms.createRoom(\n            { name: values.roomName, questionsCollectionId: values.collectionsSelect },\n            token,\n        );\n        if (!result.error) {\n            setError(\"Room successfully created!\");\n            formik.values.roomName = \"\";\n            formik.values.collectionsSelect = \"\";\n        } else {\n            setError(result.error);\n        }\n    };\n\n    async function getCollections(result) {\n        const collectionsResponse = await result;\n\n        if (!collectionsResponse.error) {\n            setCollections(collectionsResponse.reverse());\n        } else {\n            setError(\"Something went wrong\");\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            roomName: \"\",\n            collectionsSelect: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit,\n    });\n\n    useEffect(() => {\n        getCollections(Collections.getAllCollections(token));\n    }, [token]);\n\n    return (\n        <form noValidate autoComplete=\"off\" className=\"createRoom\" onSubmit={formik.handleSubmit}>\n            <FormGroup className={classes.padding}>\n                <TextField\n                    placeholder=\"Room name\"\n                    name=\"roomName\"\n                    id=\"roomName\"\n                    label=\"Room name\"\n                    value={formik.values.roomName}\n                    onChange={formik.handleChange}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n                <FormControl>\n                    <InputLabel>Collections</InputLabel>\n                    <Select\n                        labelId=\"collectionsSelect\"\n                        id=\"collectionsSelect\"\n                        value={formik.values.collectionsSelect}\n                        name=\"collectionsSelect\"\n                        onChange={formik.handleChange}\n                    >\n                        <MenuItem value=\"None\">\n                            <em>None</em>\n                        </MenuItem>\n                        {collections.map(({ name, _id }) => (\n                            <MenuItem key={_id} value={_id}>\n                                {name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormHelperText error>{error}</FormHelperText>\n                {error !== \"Room successfully created!\" ? (\n                    <Button type=\"submit\">Submit</Button>\n                ) : (\n                    <Button onClick={handleClosePopup}>Back</Button>\n                )}\n            </FormGroup>\n        </form>\n    );\n};\n","import Popover from \"@material-ui/core/Popover\";\nimport { CreateRoom } from \"../forms/CreateRoom\";\n\nconst AddRoomModal = ({ open, handleClosePopup, anchorEl }) => {\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClosePopup}\n            anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n            }}\n            transformOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }}\n        >\n            <CreateRoom handleClosePopup={handleClosePopup} />\n        </Popover>\n    );\n};\n\nexport default AddRoomModal;\n","import { useContext, useEffect, useState } from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Divider,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { Rooms } from \"../../api/rooms\";\nimport AddRoomModal from \"../modals/AddRoomModal\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppContext } from \"../../Context\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport copy from \"copy-to-clipboard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n    buttonModal: {\n        display: \"grid\",\n        justifyItems: \"center\",\n        paddingTop: \"20px\",\n    },\n}));\n\nexport const RoomsList = () => {\n    const { token } = useContext(AppContext);\n    const [rooms, setRooms] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const matches = useMediaQuery(\"(min-width:600px)\");\n    const history = useHistory();\n    const classes = useStyles();\n\n    useEffect(() => {\n        const getRooms = async () => {\n            setIsLoading(true);\n            const rooms = await Rooms.getRooms(token);\n            if (!rooms.error) setRooms(rooms.reverse());\n            setIsLoading(false);\n        };\n        getRooms(Rooms.getRooms(token));\n    }, [token]);\n\n    const handleCopyLink = (roomId) => {\n        // delete localhost for deployment\n        copy(`${process.env.PUBLIC_URL}/${roomId}`);\n    };\n\n    const handleGoToRoom = (roomId) => {\n        history.push(`/room/${roomId}`);\n    };\n\n    const handleOpenPopup = (e) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClosePopup = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n\n    const roomList = rooms.map((room) => {\n        const date = new Date(room.createdAt).toLocaleString();\n        return (\n            <>\n                <ListItem key={room._id}>\n                    <ListItemText primary={room.name} secondary={date} />\n                    <ListItemSecondaryAction>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<LinkIcon />}\n                            onClick={() => handleCopyLink(room._id)}\n                        >\n                            {matches && \"Copy link\"}\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<InputIcon />}\n                            onClick={() => handleGoToRoom(room._id)}\n                        >\n                            {matches && \"Enter\"}\n                        </Button>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </>\n        );\n    });\n\n    return (\n        <List>\n            <Typography variant=\"h6\">Rooms</Typography>\n            <Divider />\n            {isLoading ? <CircularProgress /> : roomList}\n            <div className={classes.buttonModal}>\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<AddIcon />} onClick={handleOpenPopup}>\n                    Add a new room\n                </Button>\n            </div>\n            <AddRoomModal anchorEl={anchorEl} handleClosePopup={handleClosePopup} open={open} />\n        </List>\n    );\n};\n","import { Grid, Paper } from \"@material-ui/core\";\r\nimport { CollectionsList } from \"../../components/lists/CollectionsList\";\r\nimport { RoomsList } from \"../../components/lists/RoomsList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    padding: {\r\n        padding: \"15px\",\r\n    },\r\n}));\r\n\r\nexport const Profile = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.padding} spacing={5}>\r\n            <Grid className={classes.padding} item xs={12} md={6}>\r\n                <Paper className={classes.padding}>\r\n                    <RoomsList />\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid className={classes.padding} item xs={12} md={6}>\r\n                <Paper className={classes.padding}>\r\n                    <CollectionsList />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    FormHelperText,\n    CircularProgress,\n    Button,\n    FormGroup,\n    TextField,\n} from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Rooms } from \"../../api/rooms\";\n\nconst validationSchema = yup.object({\n    email: yup.string(\"Enter your e-mail\").required(\"E-mail is required\"),\n    name: yup.string(\"Enter your name\").required(\"Name is required\"),\n});\n\nexport const GuestForm = ({ roomId, setGuestEmail, setGuestName }) => {\n    const [error, setError] = useState(\"\");\n\n    const onSubmit = async (values) => {\n        setError(<CircularProgress />);\n        const result = await Rooms.updateGuests(roomId, { email: values.email, name: values.name });\n        if (!result.error) {\n            setError(\"You successfully entered the room!\");\n            setGuestEmail(values.email);\n            setGuestName(values.name);\n            formik.values.email = \"\";\n            formik.values.name = \"\";\n        } else {\n            setError(result.error);\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            name: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit,\n    });\n    return (\n        <form noValidate autoComplete=\"off\" className=\"createRoom\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <TextField\n                    placeholder=\"Your e-mail\"\n                    name=\"email\"\n                    id=\"email\"\n                    label=\"Your e-mail\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n                <TextField\n                    placeholder=\"Your name\"\n                    name=\"name\"\n                    id=\"name\"\n                    label=\"Your name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n                <FormHelperText error>{error}</FormHelperText>\n                <Button type=\"submit\">Submit</Button>\n            </FormGroup>\n        </form>\n    );\n};\n","import { Button, AppBar, Toolbar, Typography, Paper } from \"@material-ui/core\";\nimport { CodeSharp } from \"@material-ui/icons\";\nimport { Rooms } from \"../../api/rooms\";\n\nexport const Question = ({\n    question: {\n        activeQuestion: { _id, answers, text, timeForAnswer, updatedAt },\n    },\n    setActiveQuestion,\n    roomId,\n    email,\n}) => {\n    const handleAnswer = async (index) => {\n        const res = await Rooms.postAnswer(roomId, _id, index, email);\n        console.log(roomId, _id, index, email);\n        if (res.error) console.log(res.error);\n        if (!res.error) console.log(res);\n    };\n\n    const answerList = answers.map((answer, index) => (\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => handleAnswer(index)}>\n            {answer}\n        </Button>\n    ));\n    return (\n        <Paper>\n            <Typography variant=\"h6\">{text}</Typography>\n            {answers && answerList}\n        </Paper>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Rooms } from \"../../api/rooms\";\nimport { GuestForm } from \"../../components/forms/GuestForm\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport { Question } from \"../../components/forms/Question\";\n\nexport const Guest = () => {\n    const { id } = useParams();\n    const [room, setRoom] = useState(null);\n    const [guestName, setGuestName] = useState(\"\");\n    const [guestEmail, setGuestEmail] = useState(\"\");\n    const [activeQuestion, setActiveQuestion] = useState({});\n\n    useEffect(() => {\n        const getActiveQuestion = async () => {\n            const question = await Rooms.getActiveQuestion(id, guestEmail);\n            if (!question.error) setActiveQuestion(question);\n            if (question.error || !question) setActiveQuestion({});\n        };\n        if (guestEmail) {\n            getActiveQuestion();\n            const interval = setInterval(() => getActiveQuestion(), 1000);\n            return () => clearInterval(interval);\n        }\n    }, [guestEmail, id]);\n    return (\n        <div>\n            {!guestName && !guestEmail ? (\n                <GuestForm roomId={id} setGuestEmail={setGuestEmail} setGuestName={setGuestName} />\n            ) : (\n                <Paper>\n                    <Typography variant=\"h5\">Welcome {guestName}</Typography>\n                    <Typography variant=\"body1\">Please wait for questions</Typography>\n                </Paper>\n            )}\n            {activeQuestion.activeQuestion && guestName && guestEmail && (\n                <Question\n                    question={activeQuestion}\n                    setActiveQuestion={setActiveQuestion}\n                    roomId={id}\n                    email={guestEmail}\n                />\n            )}\n        </div>\n    );\n};\n","import { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppContext } from \"../Context\";\n \nconst PrivateRoute = ({ path, exact = false, component }) => {\n  const { token } = useContext(AppContext);\n  return token ? <Route path={path} exact={exact} component={component} /> : <Redirect to=\"/\" />;\n};\n\nexport default PrivateRoute;\n","import \"../../App.css\";\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { QuestionListItem } from \"../inputs\";\nimport { AppContext } from \"../../Context\";\nimport { Rooms } from \"../../api/rooms\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n        margin: theme.spacing(4, 0, 2),\n    },\n    smallPadding: {\n        padding: \"10px\",\n    },\n}));\n\nexport const MeetingView = () => {\n    // export const MeetingView = () => {\n    //     const roomId = \"6083c31a612ed37248485983\";\n    const { id } = useParams();\n    const roomId = id;\n\n    const history = useHistory();\n\n    const classes = useStyles();\n    const { token } = useContext(AppContext);\n\n    const [room, setRoom] = useState({});\n    const [questionCollection, setQuestionCollection] = useState({});\n    const [guests, setGuests] = useState([]);\n\n    useEffect(() => {\n        let interval = setInterval(async () => {\n            console.log(\"refresh guests with: \" + roomId);\n            let roomResponse = await Rooms.getRoomById(roomId, token);\n            setGuests(roomResponse.guests);\n\n            return () => {\n                console.log(\"Clear interval: \" + interval + \" , \" + roomId);\n                clearInterval(interval);\n            };\n        }, 2000);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [roomId, token]);\n\n    useEffect(() => {\n        const fetchRoom = async () => {\n            let roomResponse = await Rooms.getRoomById(roomId, token);\n\n            setRoom(roomResponse);\n            setQuestionCollection(roomResponse.questionsCollectionId); //Note: its named \"id\" but it's whole object XD\n            setGuests(roomResponse.guests);\n\n            return roomResponse;\n        };\n        fetchRoom();\n    }, [roomId, token]);\n\n    const listQuestions = () => {\n        if (!questionCollection.questions || questionCollection.questions.length === 0) {\n            return <ListItem> There are no questions </ListItem>;\n        }\n        return questionCollection.questions.map((question) => {\n            return <QuestionListItem key={question._id} question={question} roomId={roomId} />;\n        });\n    };\n\n    const listGuests = () => {\n        if (!guests || guests.length === 0) {\n            return <ListItem> There are no guests</ListItem>;\n        } else {\n            return guests.map((guest) => (\n                <ListItem key={guest.email}>\n                    <ListItemText secondary={guest.email}>\n                        <Typography variant=\"h6\">{guest.name}</Typography>\n                    </ListItemText>\n                </ListItem>\n            ));\n        }\n    };\n\n    const closeRoom = () => {\n        Rooms.closeRoom(roomId, token);\n        history.push(`/summary/${roomId}`);\n    };\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.smallPadding}>\n            <Grid container spacing={2}>\n                <Grid item xs={8}>\n                    <Typography variant=\"h4\" className={classes.smallPadding}>\n                        Room {room.name}\n                    </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <Button\n                        style={{ marginTop: \"10px\", marginLeft: \"33%\" }}\n                        variant={\"outlined\"}\n                        color={\"primary\"}\n                        onClick={closeRoom}\n                    >\n                        Close room\n                    </Button>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={2}>\n                <Grid item xs={8}>\n                    <Paper>\n                        <Typography variant=\"h6\" className={classes.smallPadding}>\n                            Questions of {questionCollection.name}\n                        </Typography>\n                        <Divider />\n                        <div className={classes.demo}>\n                            <List>{listQuestions()}</List>\n                        </div>\n                    </Paper>\n                </Grid>\n                <Grid item xs={4}>\n                    <Paper>\n                        <Typography variant=\"h6\" className={classes.smallPadding}>\n                            Attendants\n                        </Typography>\n                        <Divider />\n                        <div className={classes.demo}>\n                            <List>{listGuests()}</List>\n                        </div>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nMeetingView.propTypes = {\n    roomId: PropTypes.string,\n    // formError: PropTypes.string,\n    // loading: PropTypes.bool,\n};\n","import { useHistory, useParams } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../Context\";\nimport { Rooms } from \"../../api/rooms\";\nimport {\n    Button,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    padding: {\n        padding: \"15px\",\n    },\n    margin: {\n        margin: \"15px 15px 15px 0\",\n    },\n}));\n\nexport const MentorSummaryView = () => {\n    const history = useHistory();\n    const classes = useStyles();\n    const { id } = useParams();\n    const { token } = useContext(AppContext);\n    const [questions, setQuestions] = useState([]);\n\n    useEffect(() => {\n        const getSummary = async () => {\n            let response = await Rooms.getMentorSummary(id, token);\n\n            if (response.questions) {\n                setQuestions(response.questions);\n            }\n        };\n        getSummary();\n    }, [id, token]);\n\n    const questionsList = () =>\n        questions.map((question, index) => {\n            return (\n                <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {question.text}\n                    </TableCell>\n                    <TableCell align=\"right\">{question.correctAnswer}</TableCell>\n                    <TableCell align=\"right\">\n                        {question.correctAnswers} / {question.allAnswers}\n                    </TableCell>\n                </TableRow>\n            );\n        });\n\n    const goBack = () => {\n        history.push(\"/\");\n    };\n    return (\n        <Grid container className={classes.padding} spacing={5}>\n            <Grid item xs={3} />\n            <Grid className={classes.padding} item xs={6}>\n                <Paper className={classes.padding}>\n                    <Typography variant=\"h4\">Summary</Typography>\n                    <TableContainer component={Paper}>\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Question</TableCell>\n                                    <TableCell align=\"right\">Correct Answer</TableCell>\n                                    <TableCell align=\"right\"> correct / all</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>{questionsList()}</TableBody>\n                        </Table>\n                    </TableContainer>\n                    <Button className={classes.margin} color={\"primary\"} variant={\"outlined\"} onClick={goBack}>\n                        Back\n                    </Button>\n                </Paper>\n            </Grid>\n            <Grid item xs={3} />\n        </Grid>\n    );\n};\n","import { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"../views/home/Home\";\nimport { Profile } from \"../views/profile/Profile\";\nimport { Guest } from \"../views/guest/Guest\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppContext } from \"../Context\";\nimport { MeetingView } from \"../components/forms/MeetingView\";\nimport { MentorSummaryView } from \"../components/forms/MentorSummaryView\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootMain: {\n        flexGrow: 1,\n    },\n}));\n\nexport const AppSwitch = () => {\n    const { token } = useContext(AppContext);\n\n    const classes = useStyles();\n    return (\n        <main className={classes.rootMain}>\n            <Switch>\n                <Route exact path=\"/\" render={() => (token ? <Profile /> : <Home />)} />\n                <Route exact path=\"/guest/:id\" render={() => (token ? <Profile /> : <Guest />)} />\n                <PrivateRoute exact path=\"/profile\" component={Profile} />\n                <PrivateRoute path=\"/room/:id\" component={MeetingView} />\n                <PrivateRoute path=\"/summary/:id\" component={MentorSummaryView} />\n            </Switch>\n        </main>\n    );\n};\n","import { ThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Store } from \"./Context\";\nimport { theme } from \"./themes/theme\";\nimport { Nav } from \"./layout/Nav\";\nimport { AppSwitch } from \"./switch/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootApp: {\n        minHeight: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\", \n        flexDirection: \"column\"\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <Store>\n            <ThemeProvider theme={theme}>\n                <Router basename=\"coders-camp-hackathon-2021-frontend\">\n                    <div className={classes.rootApp}>\n                        <Nav />\n                        <AppSwitch />\n                    </div>\n                </Router>\n            </ThemeProvider>\n        </Store>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}