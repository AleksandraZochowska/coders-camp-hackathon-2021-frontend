{"version":3,"sources":["Context.jsx","themes/theme.js","layout/Nav.jsx","components/inputs/emailInput/EmailInput.jsx","components/inputs/passwordInput/PasswordInput.jsx","api/server.js","components/forms/LoginForm.jsx","components/inputs/usernameInput/name.jsx","components/forms/RegisterForm.jsx","views/home/homeImg.jpg","views/home/Home.jsx","api/collections.js","components/lists/CollectionsList.jsx","views/profile/Profile.jsx","switch/PrivateRoute.jsx","switch/Switch.jsx","App.js","index.js"],"names":["AppContext","createContext","Store","children","useState","localStorage","getItem","token","setToken","profile","setProfile","Provider","value","setNewToken","setItem","clearToken","removeItem","setNewProfile","JSON","stringify","clearProfile","theme","createMuiTheme","palette","primary","light","main","dark","secondary","useStyles","makeStyles","rootNav","titleNav","flexGrow","marginLeft","welcomeTitle","marginRight","Nav","useContext","classes","matches","useMediaQuery","className","AppBar","position","Toolbar","Typography","variant","noWrap","name","Button","color","startIcon","onClick","EmailInput","id","errors","onChange","FormControl","fullWidth","InputLabel","htmlFor","Input","type","error","aria-describedby","FormHelperText","PasswordInput","Server","values","fetch","apiUrl","method","mode","headers","body","response","json","loginBody","user","handleError","result","console","log","LoginForm","history","useHistory","formError","setFormError","loading","setLoading","validationSchema","yup","email","required","password","min","max","onSubmit","a","setSubmitting","login","statusCode","push","formik","useFormik","initialValues","handleSubmit","FormGroup","handleChange","disabled","isSubmitting","CircularProgress","size","UsernameInput","e","RegisterForm","setAction","register","setTimeout","loginDiv","width","margin","loginImg","border","borderRadius","marginTop","action","Home","Grid","container","spacing","alignItems","style","item","md","xs","Select","event","target","MenuItem","align","src","homeImg","alt","Collections","Authorization","collectionsResponse","collectionBody","_id","questions","collection","question","CollectionsList","collections","setCollections","handleEditClick","currentTarget","useEffect","getCollections","getAllCollections","List","length","map","ListItem","ListItemText","ListItemSecondaryAction","IconButton","edge","aria-label","Profile","Paper","PrivateRoute","path","exact","component","to","rootMain","AppSwitch","render","rootApp","minHeight","display","flexDirection","App","ThemeProvider","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26a4e543.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nexport const AppContext = createContext();\n\nexport const Store = ({ children }) => {\n    const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n    const [profile, setProfile] = useState(localStorage.getItem(\"profile\") || null);\n\n    const setNewToken = (token) => {\n        setToken(token);\n        localStorage.setItem(\"token\", token);\n    };\n\n    const clearToken = () => {\n        setToken(\"\");\n        localStorage.removeItem(\"token\");\n    };\n\n    const setNewProfile = (profile) => {\n        setProfile(profile);\n        localStorage.setItem(\"profile\", JSON.stringify(profile));\n    };\n\n    const clearProfile = () => {\n        setProfile(null);\n        localStorage.removeItem(\"profile\");\n    };\n\n    return (\n        <AppContext.Provider value={{ token, setNewToken, clearToken, profile, setNewProfile, clearProfile }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nStore.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: \"#a269f8\",\n            main: \"#6e3bc4\",\n            dark: \"#380992\",\n        },\n        secondary: {\n            light: \"#c4f76d\",\n            main: \"#91c43b\",\n            dark: \"#5f9300\",\n        },\n    },\n});\n","import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { AppContext } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootNav: {\n        // flexGrow: 1, //todo it breaks Meeting View\n    },\n    titleNav: {\n        flexGrow: 1,\n        marginLeft: \"20px\",\n    },\n    welcomeTitle: {\n        marginRight: \"20px\",\n    },\n}));\n\nexport const Nav = () => {\n    const { token, profile, clearToken, clearProfile } = useContext(AppContext);\n    const classes = useStyles();\n    const matches = useMediaQuery(\"(min-width:600px)\");\n\n    const handleLogout = () => {\n        clearProfile();\n        clearToken();\n    };\n\n    return (\n        <div className={classes.rootNav}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <AssignmentIcon />\n                    <Typography className={classes.titleNav} variant=\"h6\">\n                        Questio\n                    </Typography>\n                    {token && (\n                        <>\n                            {profile && (\n                                <Typography variant=\"h6\" noWrap className={classes.welcomeTitle}>\n                                    {profile.name}\n                                </Typography>\n                            )}\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                startIcon={<ExitToAppIcon />}\n                                onClick={handleLogout}\n                            >\n                                {matches && \"Log out\"}\n                            </Button>\n                        </>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nexport const EmailInput = ({ id, name, errors, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Email</InputLabel>\n            <Input\n                type=\"email\"\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={onChange}\n                aria-describedby=\"email-input-field\"\n            />\n            <FormHelperText id=\"FormInputHelperText\">{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nEmailInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const PasswordInput = ({ id, errors, name, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Password</InputLabel>\n            <Input\n                type=\"password\"\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={onChange}\n                aria-describedby=\"password-input-field\"\n            />\n            <FormHelperText id=\"FormInputHelperText\">{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nPasswordInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","export class Server {\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/users\";\n\n    static async login(values) {\n        try {\n            const response = await fetch(Server.apiUrl + \"/login\", {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(values),\n            });\n            const loginBody = await response.json();\n\n            return { token: loginBody.token, profile: loginBody.user };\n        } catch (error) {\n            Server.handleError(error);\n        }\n    }\n\n    static async register(values) {\n        try {\n            const response = await fetch(Server.apiUrl + \"/register\", {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(values),\n            });\n            const result = await response.json();\n\n            return result;\n        } catch (error) {\n            Server.handleError(error);\n        }\n    }\n\n    static handleError(error) {\n        console.log(error);\n    }\n}\n","import React, { useContext, useState } from \"react\";\nimport { FormGroup, Button, CircularProgress } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\n\nimport { EmailInput, PasswordInput } from \"../inputs\";\nimport { AppContext } from \"../../Context\";\nimport { Server } from \"../../api/server\";\n\nexport const LoginForm = () => {\n    const history = useHistory();\n    const { setNewToken, setNewProfile } = useContext(AppContext);\n    const [formError, setFormError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const validationSchema = yup.object({\n        email: yup.string(\"Enter email\").email(\"Enter a valid email\").required(\"Email is required\"),\n        password: yup\n            .string(\"Enter your password\")\n            .required(\"Password is required\")\n            .min(8, \"Password should be of minimum 8 characters length\")\n            .max(20, \"Password can't be longer than 20 characters.\")\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            ),\n    });\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        setFormError(\"\");\n        if (!loading) setLoading(() => true);\n        const result = await Server.login(values);\n\n        if (result.error) {\n            if (result.statusCode === 401) {\n                setFormError(\"Invalid credentials\");\n            } else {\n                setFormError(\"Something went wrong\");\n            }\n            setSubmitting(false);\n        } else {\n            setNewProfile(result.profile);\n            setNewToken(result.token);\n\n            setSubmitting(false);\n            history.push(\"/profile\");\n        }\n        setLoading(() => false);\n    };\n\n    const formik = useFormik({\n        initialValues: { email: \"\", password: \"\" },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form className=\"login\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <EmailInput\n                    errors={formik.errors.email}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <PasswordInput\n                    errors={formik.errors.password}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                />\n                <div id=\"formError\">{formError}</div>\n                <div>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={formik.isSubmitting}>\n                        Login\n                    </Button>\n                    {loading && <CircularProgress size={24} />}\n                </div>\n            </FormGroup>\n        </form>\n    );\n};\n","import React from \"react\";\nimport { FormHelperText, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nexport const UsernameInput = ({ id, name, errors, onChange }) => {\n    return (\n        <FormControl fullWidth>\n            <InputLabel htmlFor={id}>Name</InputLabel>\n            <Input\n                error={!!errors}\n                id={id}\n                name={name}\n                onChange={(e) => onChange(e)}\n                aria-describedby=\"email-input-field\"\n            />\n            <FormHelperText>{errors ? errors : \"\"}</FormHelperText>\n        </FormControl>\n    );\n};\n\nUsernameInput.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { FormGroup, Button, CircularProgress } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport { EmailInput, PasswordInput } from \"../inputs\";\nimport { Server } from \"../../api/server\";\nimport { UsernameInput } from \"../inputs/usernameInput/name\";\n\nexport const RegisterForm = ({ setAction }) => {\n    const [formError, setFormError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const validationSchema = yup.object({\n        email: yup.string(\"Enter email\").email(\"Enter a valid email\").required(\"Email is required\"),\n        password: yup\n            .string(\"Enter your password\")\n            .required(\"Password is required\")\n            .min(8, \"Password should be of minimum 8 characters length\")\n            .max(20, \"Password can't be longer than 20 characters.\")\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\",\n            ),\n        name: yup.string(\"Enter your name\").required(\"Name is required\"),\n    });\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        setFormError(\"\");\n        if (!loading) setLoading(() => true);\n        const result = await Server.register(values);\n        if (result.error) {\n            if (result.statusCode === 401) {\n                setFormError(\"Invalid credentials\");\n            } else {\n                setFormError(\"Something went wrong\");\n            }\n            setSubmitting(false);\n        } else {\n            setSubmitting(false);\n            setFormError(\"Account successfully created!\")\n            setTimeout(() => setAction('login'), 2000);\n        }\n        setLoading(() => false);\n    };\n\n    const formik = useFormik({\n        initialValues: { email: \"\", password: \"\" },\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <form className=\"register\" onSubmit={formik.handleSubmit}>\n            <FormGroup>\n                <UsernameInput\n                    errors={formik.errors.name}\n                    id=\"name\"\n                    name=\"name\"\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                />\n                <EmailInput\n                    errors={formik.errors.email}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                />\n                <PasswordInput\n                    errors={formik.errors.password}\n                    id=\"password\"\n                    name=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                />\n                <div id=\"formError\">{formError}</div>\n                <div>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={formik.isSubmitting}>\n                        Register\n                    </Button>\n                    {loading && <CircularProgress size={24} />}\n                </div>\n            </FormGroup>\n        </form>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/homeImg.05c2a606.jpg\";","import { useState } from \"react\";\nimport { Button, FormControl, Grid, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { LoginForm } from \"../../components/forms/LoginForm\";\nimport { RegisterForm } from \"../../components/forms/RegisterForm\";\nimport homeImg from \"./homeImg.jpg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    loginDiv: {\n        width: \"80%\",\n        margin: \"auto\",\n    },\n    loginImg: {\n        border: \"6px solid #91C43B\",\n        borderRadius: \"10%\",\n        marginTop: \"25px\",\n    },\n    action: {\n        marginTop: \"30px\",\n    },\n}));\n\nexport const Home = () => {\n    const classes = useStyles();\n    const [action, setAction] = useState(\"login\");\n    const history = useHistory();\n\n    const handleChange = (event) => {\n        setAction(event.target.value);\n    };\n\n    return (\n        <Grid\n            container\n            spacing={5}\n            alignItems=\"center\"\n            style={{\n                margin: 0,\n                width: \"100%\",\n            }}\n        >\n            <Grid item md={6} xs={12}>\n                <div className={classes.loginDiv}>\n                    {action === \"login\" ? <LoginForm /> : <RegisterForm setAction={setAction} />}\n                    <div className={classes.action}>\n                        <FormControl>\n                            <Select value={action} onChange={handleChange}>\n                                <MenuItem value={\"login\"}>Log in</MenuItem>\n                                <MenuItem value={\"register\"}>Register</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n                <Button onClick={() => history.push(\"/mentor/question\")}>Guzik</Button>\n            </Grid>\n            <Grid item md={6} xs={12}>\n                <div className={classes.loginDiv}>\n                    <Typography align=\"center\" variant=\"h4\">\n                        No to distraction, yes to motivation!\n                    </Typography>\n                    <img src={homeImg} alt=\"homeImage\" width=\"95%\" className={classes.loginImg} />\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n","export class Collections {\n    static apiUrl = \"https://camp-hackathon-2021-backend.herokuapp.com/api/collections\";\n\n    static async getAllCollections(token) {\n        try {\n            const response = await fetch(Collections.apiUrl, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const collectionsResponse = await response.json();\n\n            return collectionsResponse;\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async getCollectionById(id, token) {\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"GET\",\n                mode: \"cors\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const collectionBody = await response.json();\n\n            return {\n                id: collectionBody._id,\n                name: collectionBody.name,\n                questions: collectionBody.questions,\n            };\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async createCollection(collection, token) {\n        // collection = {name: \"string\"}\n        try {\n            const response = await fetch(Collections.apiUrl, {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(collection),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async updateCollectionName(id, collection, token) {\n        // collection = {name: \"string\"}\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(collection),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static async addQuestionToCollection(id, question, token) {\n        // question = {text: \"string\", answers: [...], correctAnswer: 0, timeForAnswer: 60}\n        try {\n            const response = await fetch(`${Collections.apiUrl}/${id}`, {\n                method: \"PATCH\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify(question),\n            });\n            return await response.json();\n        } catch (error) {\n            Collections.handleError(error);\n        }\n    }\n\n    static handleError(error) {\n        console.log(error);\n    }\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n    Typography,\n    ListItem,\n    ListItemText,\n    List,\n    IconButton,\n    ListItemSecondaryAction,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { Collections } from \"../../api/collections\";\nimport { AppContext } from \"../../Context\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n// import AnimatedModal from \"../modals/AnimatedModal\";\n// import { QuestionsList } from \"./QuestionsList\";\n\nexport const CollectionsList = () => {\n    const { token } = useContext(AppContext);\n    const [collections, setCollections] = useState([]);\n\n    async function getCollections(result) {\n        const collections = await result;\n\n        if (!collections.error) setCollections(collections);\n    }\n\n    useEffect(() => {\n        getCollections(Collections.getAllCollections(token));\n    }, [token]);\n\n    function handleEditClick(event) {\n        const id = event.currentTarget.value;\n        console.log(id);\n    }\n\n    return (\n        <>\n            {/*<AnimatedModal>*/}\n            {/*    <QuestionsList />*/}\n            {/*</AnimatedModal>*/}\n            <List>\n                <Typography variant=\"h6\">Collections of Questions</Typography>\n                {!!collections.length ? (\n                    collections.map((collection) => {\n                        console.log(collection);\n                        return (\n                            <ListItem key={collection._id}>\n                                <ListItemText primary={collection.name} />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        color=\"primary\"\n                                        edge=\"end\"\n                                        aria-label=\"edit\"\n                                        value={collection._id}\n                                        onClick={handleEditClick}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        );\n                    })\n                ) : (\n                    <CircularProgress />\n                )}\n            </List>\n        </>\n    );\n};\n","import { Grid, Paper } from \"@material-ui/core\";\nimport { CollectionsList } from \"../../components/lists/CollectionsList\";\n\nexport const Profile = () => {\n    return (\n        <Grid container>\n            <Grid item xs={12} md={6}>\n\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <Paper>\n                    <CollectionsList />\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n","import { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppContext } from \"../Context\";\n \nconst PrivateRoute = ({ path, exact = false, component }) => {\n  const { token } = useContext(AppContext);\n  return token ? <Route path={path} exact={exact} component={component} /> : <Redirect to=\"/\" />;\n};\n\nexport default PrivateRoute;\n","import { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"../views/home/Home\";\nimport { Profile } from \"../views/profile/Profile\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppContext } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootMain: {\n        flexGrow: 1,\n    },\n}));\n\nexport const AppSwitch = () => {\n    const { token } = useContext(AppContext);\n\n    const classes = useStyles();\n    return (\n        <main className={classes.rootMain}>\n            <Switch>\n                <Route exact path=\"/\" render={() => (token ? <Profile /> : <Home />)} />\n                <PrivateRoute exact path=\"/profile\" component={Profile} />\n            </Switch>\n        </main>\n    );\n};\n","import { ThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Store } from \"./Context\";\nimport { theme } from \"./themes/theme\";\nimport { Nav } from \"./layout/Nav\";\nimport { AppSwitch } from \"./switch/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootApp: {\n        minHeight: \"100vh\",\n        width: \"100vw\",\n        display: \"flex\", \n        flexDirection: \"column\"\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <Store>\n            <ThemeProvider theme={theme}>\n                <Router basename=\"coders-camp-hackathon-2021-frontend\">\n                    <div className={classes.rootApp}>\n                        <Nav />\n                        <AppSwitch />\n                    </div>\n                </Router>\n            </ThemeProvider>\n        </Store>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}